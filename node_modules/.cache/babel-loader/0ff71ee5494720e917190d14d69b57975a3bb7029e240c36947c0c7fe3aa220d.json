{"ast":null,"code":"import { mapActions } from \"vuex\";\nimport useValidate from \"@vuelidate/core\";\nimport { required, email, minLength } from \"@vuelidate/validators\";\n// For Composition Api\nimport { reactive, computed } from \"vue\";\nexport default {\n  name: \"LoginForm\",\n  setup() {\n    // Data\n    const state = reactive({\n      email: \"\",\n      password: \"\"\n    });\n    // Validations\n    const rules = computed(() => {\n      return {\n        email: {\n          required,\n          email\n        },\n        password: {\n          required,\n          minLength: minLength(10)\n        }\n      };\n    });\n  },\n  data() {\n    return {\n      // v$: useValidate(),\n    };\n  },\n  methods: {\n    /* signupPage(){\n            // Use name in router file\n            this.$router.push({name:'sign-up'});\n        }, */\n    ...mapActions([\"redirectTo\"]),\n    loginUser() {\n      this.v$.$validate();\n      if (!this.v$.$error) {\n        console.log(\"Form Validated Successfully\");\n      } else {\n        console.log(\"Form Validation Failed\");\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAmDA,SAASA,UAAS,QAAS,MAAM;AACjC,OAAOC,WAAU,MAAO,iBAAiB;AACzC,SAASC,QAAQ,EAAEC,KAAK,EAAEC,SAAQ,QAAS,uBAAuB;AAClE;AACA,SAASC,QAAQ,EAAEC,QAAO,QAAS,KAAK;AACxC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAK,GAAG;IACN;IACA,MAAMC,KAAI,GAAIJ,QAAQ,CAAC;MACrBF,KAAK,EAAE,EAAE;MACTO,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF;IACA,MAAMC,KAAI,GAAIL,QAAQ,CAAC,MAAM;MAC3B,OAAO;QACLH,KAAK,EAAE;UAAED,QAAQ;UAAEC;QAAM,CAAC;QAC1BO,QAAQ,EAAE;UAAER,QAAQ;UAAEE,SAAS,EAAEA,SAAS,CAAC,EAAE;QAAE;MACjD,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EACDQ,IAAI,GAAG;IACL,OAAO;MACL;IAAA,CACD;EACH,CAAC;EACDC,OAAO,EAAE;IACP;;;;IAIA,GAAGb,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7Bc,SAAS,GAAG;MACV,IAAI,CAACC,EAAE,CAACC,SAAS,EAAE;MACnB,IAAI,CAAC,IAAI,CAACD,EAAE,CAACE,MAAM,EAAE;QACnBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC5C,OAAO;QACLD,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACvC;IACF;EACF;AACF,CAAC","names":["mapActions","useValidate","required","email","minLength","reactive","computed","name","setup","state","password","rules","data","methods","loginUser","v$","$validate","$error","console","log"],"sourceRoot":"","sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/Login/LoginForm.vue"],"sourcesContent":["<template>\n  <form @click.prevent>\n    <h1>Login</h1>\n    <div class=\"row g-3 align-items-center\">\n      <div class=\"col-auto d-block mx-auto\">\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          placeholder=\"Enter Your Email\"\n          v-model=\"email\"\n        />\n        <span class=\"error-feedback\" v-if=\"v$.email.$error\">{{\n          v$.email.$errors[0].$message\n        }}</span>\n      </div>\n    </div>\n    <br />\n    <div class=\"row g-3 align-items-center\">\n      <div class=\"col-auto d-block mx-auto\">\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          placeholder=\"Enter Your Password\"\n          v-model=\"password\"\n        />\n        <span class=\"error-feedback\" v-if=\"v$.password.$error\">{{\n          v$.password.$errors[0].$message\n        }}</span>\n      </div>\n    </div>\n    <br />\n    <div class=\"row g-3 align-items-center\">\n      <div class=\"col-auto d-block mx-auto\">\n        <button type=\"submit\" class=\"btn btn-secondary\" @click=\"loginUser()\">\n          Login Now\n        </button>\n        &nbsp;\n        <!-- <button type=\"button\" class=\"btn btn-link\" @click=\"signupPage()\">Sign Up</button> -->\n        <button\n          type=\"button\"\n          class=\"btn btn-link\"\n          @click=\"redirectTo({ val: 'sign-up' })\"\n        >\n          Sign Up\n        </button>\n      </div>\n    </div>\n  </form>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\nimport useValidate from \"@vuelidate/core\";\nimport { required, email, minLength } from \"@vuelidate/validators\";\n// For Composition Api\nimport { reactive, computed } from \"vue\";\nexport default {\n  name: \"LoginForm\",\n  setup() {\n    // Data\n    const state = reactive({\n      email: \"\",\n      password: \"\",\n    });\n    // Validations\n    const rules = computed(() => {\n      return {\n        email: { required, email },\n        password: { required, minLength: minLength(10) },\n      };\n    });\n  },\n  data() {\n    return {\n      // v$: useValidate(),\n    };\n  },\n  methods: {\n    /* signupPage(){\n            // Use name in router file\n            this.$router.push({name:'sign-up'});\n        }, */\n    ...mapActions([\"redirectTo\"]),\n    loginUser() {\n      this.v$.$validate();\n      if (!this.v$.$error) {\n        console.log(\"Form Validated Successfully\");\n      } else {\n        console.log(\"Form Validation Failed\");\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.error-feedback {\n  color: red;\n  font-size: 0.85em;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}