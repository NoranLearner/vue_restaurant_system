{"ast":null,"code":"import { mapActions } from \"vuex\";\nimport useValidate from \"@vuelidate/core\";\nimport { required, email, minLength } from \"@vuelidate/validators\";\n// For Composition Api\nimport { reactive, computed } from \"vue\";\nexport default {\n  name: \"LoginForm\",\n  setup() {\n    const state = reactive({\n      email: \"\",\n      password: \"\"\n    });\n    const rules = computed(() => {\n      return {\n        email: {\n          required,\n          email\n        },\n        password: {\n          required,\n          minLength: minLength(10)\n        }\n      };\n    });\n  },\n  data() {\n    return {\n      // v$: useValidate(),\n      // \n      // \n    };\n  },\n  methods: {\n    /* signupPage(){\n        // Use name in router file\n        this.$router.push({name:'sign-up'});\n    }, */\n    ...mapActions(['redirectTo']),\n    loginUser() {\n      this.v$.$validate();\n      if (!this.v$.$error) {\n        console.log('Form Validated Successfully');\n      } else {\n        console.log('Form Validation Failed');\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AA6BA,SAAQA,UAAU,QAAO,MAAM;AAC/B,OAAOC,WAAU,MAAO,iBAAiB;AACzC,SAASC,QAAQ,EAAEC,KAAK,EAAEC,SAAQ,QAAS,uBAAuB;AAClE;AACA,SAASC,QAAQ,EAAEC,QAAO,QAAS,KAAK;AACxC,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,KAAK,GAAG;IACJ,MAAMC,KAAI,GAAIJ,QAAQ,CAAC;MACnBF,KAAK,EAAE,EAAE;MACTO,QAAQ,EAAE;IACd,CAAC,CAAC;IACF,MAAMC,KAAI,GAAIL,QAAQ,CAAC,MAAM;MACzB,OAAO;QACPH,KAAK,EAAE;UAACD,QAAQ;UAAEC;QAAK,CAAC;QACxBO,QAAQ,EAAE;UAAER,QAAQ;UAAEE,SAAS,EAAEA,SAAS,CAAC,EAAE;QAAE;MACnD;IACA,CAAC,CAAC;EACN,CAAC;EACDQ,IAAI,GAAG;IACH,OAAO;MACH;MACA;MACA;IAAA,CACJ;EACJ,CAAC;EACDC,OAAO,EAAE;IACL;;;;IAIA,GAAGb,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7Bc,SAAS,GAAG;MACR,IAAI,CAACC,EAAE,CAACC,SAAS,EAAE;MACnB,IAAI,CAAC,IAAI,CAACD,EAAE,CAACE,MAAM,EAAE;QACjBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC9C,OAAO;QACHD,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACzC;IACJ;EACJ;AACJ","names":["mapActions","useValidate","required","email","minLength","reactive","computed","name","setup","state","password","rules","data","methods","loginUser","v$","$validate","$error","console","log"],"sourceRoot":"","sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/Login/LoginForm.vue"],"sourcesContent":["<template>\n    <form @click.prevent>\n            <h1>Login</h1>\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <input type=\"email\" class=\"form-control\" placeholder=\"Enter Your Email\" v-model=\"email\">\n                    <span class=\"error-feedback\" v-if=\"v$.email.$error\">{{ v$.email.$errors[0].$message }}</span>\n                </div>\n            </div>\n            <br />\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <input type=\"password\" class=\"form-control\" placeholder=\"Enter Your Password\" v-model=\"password\">\n                    <span class=\"error-feedback\" v-if=\"v$.password.$error\">{{ v$.password.$errors[0].$message }}</span>\n                </div>\n            </div>\n            <br />\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <button type=\"submit\" class=\"btn btn-secondary\" @click=\"loginUser()\">Login Now</button>\n                    &nbsp;\n                    <!-- <button type=\"button\" class=\"btn btn-link\" @click=\"signupPage()\">Sign Up</button> -->\n                    <button type=\"button\" class=\"btn btn-link\" @click=\"redirectTo({val: 'sign-up'})\">Sign Up</button>\n                </div>\n            </div>\n        </form>\n</template>\n\n<script>\nimport {mapActions} from \"vuex\";\nimport useValidate from \"@vuelidate/core\";\nimport { required, email, minLength } from \"@vuelidate/validators\";\n// For Composition Api\nimport { reactive, computed } from \"vue\";\nexport default {\n    name: \"LoginForm\",\n    setup() {\n        const state = reactive({\n            email: \"\",\n            password: \"\",\n        });\n        const rules = computed(() => {\n            return {\n            email: {required, email},\n            password: { required, minLength: minLength(10) },\n        }\n        });\n    },\n    data() {\n        return {\n            // v$: useValidate(),\n            // \n            // \n        }\n    },\n    methods: {\n        /* signupPage(){\n            // Use name in router file\n            this.$router.push({name:'sign-up'});\n        }, */\n        ...mapActions(['redirectTo']),\n        loginUser() {\n            this.v$.$validate();\n            if (!this.v$.$error) {\n                console.log('Form Validated Successfully');\n            } else {\n                console.log('Form Validation Failed');\n            }\n        },\n    },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.error-feedback{\n    color: red;\n    font-size: 0.85em;\n    }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}