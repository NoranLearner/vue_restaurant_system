{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"text-end\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-info text-white\",\n  type: \"button\"\n}, \"Profile\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_AddNewLocation = _resolveComponent(\"AddNewLocation\");\n  const _component_UserLocations = _resolveComponent(\"UserLocations\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_Navbar), _createElementVNode(\"p\", _hoisted_2, [_createTextVNode(\" Welcome \" + _toDisplayString($data.userName) + \" \", 1 /* TEXT */), _createVNode(_component_router_link, {\n    to: {\n      name: 'profile'\n    }\n  }, {\n    default: _withCtx(() => [_hoisted_3]),\n    _: 1 /* STABLE */\n  })])]), _createVNode(_component_AddNewLocation), _createVNode(_component_UserLocations, {\n    allLocations: $data.listOfLocations\n  }, null, 8 /* PROPS */, [\"allLocations\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAW;;EAEjBA,KAAK,EAAC;AAAU;gCAGfC,oBAAsE;EAA9DD,KAAK,EAAC,yBAAyB;EAACE,IAAI,EAAC;GAAS,SAAO;;;;;;;6DALnED,oBAQM,OARNE,UAQM,GAPJC,aAAUC,oBACVJ,oBAKI,KALJK,UAKI,oBALgB,WACV,oBAAGC,cAAQ,IAAG,GACtB,8BAEcC;IAFAC,EAAE,EAAE;MAAAC;IAAA;EAAmB;sBACnC,MAAsE,CAAtEC,UAAsE;;UAI5EP,aAAiBQ,4BACjBR,aAAgDS;IAAhCC,YAAY,EAAEP;EAAe","names":["class","_createElementVNode","type","_hoisted_1","_createVNode","_component_Navbar","_hoisted_2","$data","_component_router_link","to","name","_hoisted_3","_component_AddNewLocation","_component_UserLocations","allLocations"],"sourceRoot":"","sources":["/opt/lampp/htdocs/rest-sys-2021/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <Navbar />\n    <p class=\"text-end\">\n      Welcome {{ userName }}\n      <router-link :to=\"{ name: 'profile' }\">\n        <button class=\"btn btn-info text-white\" type=\"button\">Profile</button>\n      </router-link>\n    </p>\n  </div>\n  <AddNewLocation/>\n  <UserLocations :allLocations=\"listOfLocations\"/>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Navbar from \"@/components/Header/Navbar.vue\";\nimport AddNewLocation from \"@/components/Locations/AddNewLocation.vue\";\nimport { mapActions } from \"vuex\";\nexport default {\n  name: \"HomeView\",\n  data() {\n    return {\n      userName: \"\",\n      userId: \"\",\n      listOfLocations: [],\n    };\n  },\n  components: { Navbar, AddNewLocation },\n  async mounted() {\n    let user = localStorage.getItem('user-info');\n    if (!user) {\n      // Using name in router file\n      this.redirectTo({ val: 'sign-up' });\n    } else {\n      this.userName = JSON.parse(user).name;\n      this.userId = JSON.parse(user).id;\n    }\n    let result = await axios.get(`http://localhost:3000/locations?userId=${this.userId}`);\n    if (result.status == 200 && result.data.length > 0) { \n      // console.log(result.data);\n      this.listOfLocations = result.data;\n    }\n  },\n  methods: {\n    ...mapActions([\"redirectTo\"]),\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}