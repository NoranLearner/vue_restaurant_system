{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"text-end\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Navbar), _createElementVNode(\"p\", _hoisted_2, [_createTextVNode(\" Welcome \" + _toDisplayString($data.userName) + \" \", 1 /* TEXT */), _createCommentVNode(\" <router-link :to=\\\"{ name: 'profile' }\\\">\\n        <button class=\\\"btn btn-info text-white\\\" type=\\\"button\\\">Profile</button>\\n      </router-link> \")])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAW;;EAEjBA,KAAK,EAAC;AAAU;;;uBAFrBC,oBAQM,OARNC,UAQM,GAPJC,aAAUC,oBACVC,oBAKI,KALJC,UAKI,oBALgB,WACV,oBAAGC,cAAQ,IAAG,GACtB,6LAEkB","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_Navbar","_createElementVNode","_hoisted_2","$data"],"sourceRoot":"","sources":["/opt/lampp/htdocs/rest-sys-2021/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <Navbar />\n    <p class=\"text-end\">\n      Welcome {{ userName }}\n      <!-- <router-link :to=\"{ name: 'profile' }\">\n        <button class=\"btn btn-info text-white\" type=\"button\">Profile</button>\n      </router-link> -->\n    </p>\n  </div>\n</template>\n\n<script>\nimport Navbar from \"@/components/Header/Navbar.vue\";\nimport { mapActions } from \"vuex\";\nexport default {\n  name: \"HomeView\",\n  data() {\n    return {\n      userName: \"\",\n    };\n  },\n  components: { Navbar },\n  mounted() {\n    let user = localStorage.getItem(\"user-info\");\n    if (!user) {\n      this.redirectTo({ val: \"sign-up\" });\n    } else {\n      this.userName = JSON.parse(user).name;\n    }\n  },\n  methods: {\n    ...mapActions([\"redirectTo\"]),\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}