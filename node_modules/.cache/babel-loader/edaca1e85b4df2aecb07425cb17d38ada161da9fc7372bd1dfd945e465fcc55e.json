{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport { mapActions, mapMutations } from \"vuex\";\nimport Navbar from '@/components/Header/Navbar.vue';\nexport default {\n  name: 'DeleteItem',\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      locId: this.$route.params.locationId,\n      itemId: this.$route.params.itemId,\n      userId: '',\n      locationData: '',\n      locName: \"\",\n      locAddress: \"\",\n      itemName: \"\",\n      itemPrice: \"\",\n      itemsQty: 1,\n      description: \"\",\n      pickedCategory: \"\",\n      successMessage: '',\n      errorMessage: ''\n    };\n  },\n  async mounted() {\n    let user = localStorage.getItem('user-info');\n    if (!user) {\n      this.redirectTo({\n        val: 'sign-up'\n      });\n    } else {\n      this.userId = JSON.parse(user).id;\n      this.canCurrentUserAccessThisLocation();\n      this.canUserAccessThisItem({\n        userIdIs: this.userId,\n        locationIdIs: this.locId,\n        itemIdIs: this.itemId,\n        redirectToPage: \"home\"\n      });\n      this.getItemInfo(this.userId, this.locId, this.itemId);\n    }\n  },\n  methods: {\n    ...mapMutations([\"canUserAccessThisItem\"]),\n    ...mapActions(['redirectTo']),\n    async canCurrentUserAccessThisLocation() {\n      let result = await axios.get(`\n            http://localhost:3000/locations?id=${this.locId}&userId=${this.userId}\n            `);\n      if (result.status == 200 && result.data.length > 0) {\n        this.locationData = result.data;\n        this.locName = this.locationData[0].name;\n        this.locAddress = this.locationData[0].address;\n      } else {\n        this.redirectTo({\n          val: 'home'\n        });\n      }\n    },\n    async getItemInfo(userId, locId, itemId) {\n      let result = await axios.get(`\n                http://localhost:3000/items?userId=${userId}&locId=${locId}&id=${itemId}\n            `);\n      let itemDetails = result.data[0];\n      if (result.status == 200) {\n        this.itemName = itemDetails.name;\n        this.itemPrice = itemDetails.price;\n        this.itemsQty = itemDetails.qty;\n        this.description = itemDetails.description;\n        this.pickedCategory = itemDetails.catId;\n      }\n    },\n    async deleteItem() {\n      let result = await axios.delete(`http://localhost:3000/items/${this.itemId}`);\n      if (result.status == 200) {\n        this.successMessage = 'Item is deleted Successfully';\n        this.errorMessage = '';\n        setTimeout(() => {\n          this.$router.push({\n            name: \"menu\",\n            params: {\n              locationId: this.locId\n            }\n          });\n        }, 2000);\n      } else {\n        this.successMessage = '';\n        this.errorMessage = 'Something went wrong, Try again';\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AA0DA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,UAAU,EAAEC,YAAW,QAAS,MAAM;AAC/C,OAAOC,MAAK,MAAO,gCAAgC;AAEnD,eAAe;EACXC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,IAAI,GAAG;IACH,OAAO;MACHC,KAAK,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,UAAU;MACpCC,MAAM,EAAE,IAAI,CAACH,MAAM,CAACC,MAAM,CAACE,MAAM;MACjCC,MAAM,EAAE,EAAE;MACVC,YAAY,EAAE,EAAE;MAChBC,OAAO,EAAE,EAAE;MACXC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,CAAC;MACXC,WAAW,EAAE,EAAE;MACfC,cAAc,EAAE,EAAE;MAClBC,cAAc,EAAE,EAAE;MAClBC,YAAY,EAAE;IAClB;EACJ,CAAC;EACD,MAAMC,OAAO,GAAG;IACZ,IAAIC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC5C,IAAI,CAACF,IAAI,EAAE;MACP,IAAI,CAACG,UAAU,CAAC;QAAEC,GAAG,EAAE;MAAU,CAAC,CAAC;IACvC,OAAO;MAEH,IAAI,CAAChB,MAAK,GAAIiB,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC,CAACO,EAAE;MAEjC,IAAI,CAACC,gCAAgC,EAAE;MAEvC,IAAI,CAACC,qBAAqB,CAAC;QACvBC,QAAQ,EAAE,IAAI,CAACtB,MAAM;QACrBuB,YAAY,EAAE,IAAI,CAAC5B,KAAK;QACxB6B,QAAQ,EAAE,IAAI,CAACzB,MAAM;QACrB0B,cAAc,EAAE;MACpB,CAAC,CAAC;MAEF,IAAI,CAACC,WAAW,CAAC,IAAI,CAAC1B,MAAM,EAAE,IAAI,CAACL,KAAK,EAAE,IAAI,CAACI,MAAM,CAAC;IAE1D;EACJ,CAAC;EACD4B,OAAO,EAAE;IAEL,GAAGrC,YAAY,CAAC,CAAC,uBAAuB,CAAC,CAAC;IAC1C,GAAGD,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAE7B,MAAM+B,gCAAgC,GAAG;MACrC,IAAIQ,MAAK,GAAI,MAAMxC,KAAK,CAACyC,GAAG,CAAC;iDACQ,IAAI,CAAClC,KAAM,WAAU,IAAI,CAACK,MAAM;aACpE,CAAC;MACF,IAAI4B,MAAM,CAACE,MAAK,IAAK,GAAE,IAAKF,MAAM,CAAClC,IAAI,CAACqC,MAAK,GAAI,CAAC,EAAE;QAChD,IAAI,CAAC9B,YAAW,GAAI2B,MAAM,CAAClC,IAAI;QAC/B,IAAI,CAACQ,OAAM,GAAI,IAAI,CAACD,YAAY,CAAC,CAAC,CAAC,CAACT,IAAI;QACxC,IAAI,CAACW,UAAS,GAAI,IAAI,CAACF,YAAY,CAAC,CAAC,CAAC,CAAC+B,OAAO;MAClD,OAAO;QACH,IAAI,CAACjB,UAAU,CAAC;UAAEC,GAAG,EAAE;QAAO,CAAC,CAAC;MACpC;IACJ,CAAC;IAED,MAAMU,WAAW,CAAC1B,MAAM,EAAEL,KAAK,EAAEI,MAAM,EAAE;MACrC,IAAI6B,MAAK,GAAI,MAAMxC,KAAK,CAACyC,GAAG,CAAC;qDACY7B,MAAO,UAASL,KAAM,OAAMI,MAAM;aAC1E,CAAC;MACF,IAAIkC,WAAU,GAAIL,MAAM,CAAClC,IAAI,CAAC,CAAC,CAAC;MAChC,IAAIkC,MAAM,CAACE,MAAK,IAAK,GAAG,EAAE;QACtB,IAAI,CAAC1B,QAAO,GAAI6B,WAAW,CAACzC,IAAI;QAChC,IAAI,CAACa,SAAQ,GAAI4B,WAAW,CAACC,KAAK;QAClC,IAAI,CAAC5B,QAAO,GAAI2B,WAAW,CAACE,GAAG;QAC/B,IAAI,CAAC5B,WAAU,GAAI0B,WAAW,CAAC1B,WAAW;QAC1C,IAAI,CAACC,cAAa,GAAIyB,WAAW,CAACG,KAAK;MAC3C;IACJ,CAAC;IAED,MAAMC,UAAU,GAAG;MACf,IAAIT,MAAK,GAAI,MAAMxC,KAAK,CAACkD,MAAM,CAAE,+BAA8B,IAAI,CAACvC,MAAO,EAAC,CAAC;MAE7E,IAAI6B,MAAM,CAACE,MAAK,IAAK,GAAG,EAAE;QACtB,IAAI,CAACrB,cAAa,GAAI,8BAA8B;QACpD,IAAI,CAACC,YAAW,GAAI,EAAE;QACtB6B,UAAU,CAAC,MAAM;UACb,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;YAAEjD,IAAI,EAAE,MAAM;YAAEK,MAAM,EAAE;cAAEC,UAAU,EAAE,IAAI,CAACH;YAAM;UAAE,CAAC,CAAC;QAC3E,CAAC,EAAE,IAAI,CAAC;MACZ,OAAO;QACH,IAAI,CAACc,cAAa,GAAI,EAAE;QACxB,IAAI,CAACC,YAAW,GAAI,iCAAiC;MACzD;IACJ;EAEJ;AACJ","names":["axios","mapActions","mapMutations","Navbar","name","components","data","locId","$route","params","locationId","itemId","userId","locationData","locName","locAddress","itemName","itemPrice","itemsQty","description","pickedCategory","successMessage","errorMessage","mounted","user","localStorage","getItem","redirectTo","val","JSON","parse","id","canCurrentUserAccessThisLocation","canUserAccessThisItem","userIdIs","locationIdIs","itemIdIs","redirectToPage","getItemInfo","methods","result","get","status","length","address","itemDetails","price","qty","catId","deleteItem","delete","setTimeout","$router","push"],"sourceRoot":"","sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/Menu/DeleteItem.vue"],"sourcesContent":["<template>\n\n    <div class=\"container\">\n\n        <Navbar />\n\n        <form @click.prevent>\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto text-center\">\n\n                    <div class=\"text-center\">\n                        <h1 class=\"mb0\">{{ locName }}</h1>\n                        <p class=\"text-muted\">{{ locAddress }}</p>\n                    </div>\n\n                    <hr>\n\n                    <p class=\"text-danger\">\n                        Are you sure you want to delete this item ?\n                    </p>\n\n                    <h4> {{ itemName }} </h4>\n\n                </div>\n            </div>\n\n            <br/>\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <router-link :to=\"{ name: 'menu', params: { locationId: locId } }\">\n                        <button type=\"button\" class=\"btn btn-secondary\">Back To Menu</button>\n                    </router-link>\n                    &nbsp;\n                    <button class=\"btn btn-danger text-white\" @click=\"deleteItem()\">Delete Now</button>\n                </div>\n            </div>\n\n            <br />\n\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto alert alert-success\" v-if=\"successMessage.length > 0\">\n                    {{ successMessage }}\n                </div>\n                <div class=\"col-auto d-block mx-auto alert alert-warning\" v-if=\"errorMessage.length > 0\">\n                    {{ errorMessage }}\n                </div>\n            </div>\n\n        </form>\n\n    </div>\n\n</template>\n\n<script>\n\nimport axios from \"axios\";\nimport { mapActions, mapMutations } from \"vuex\";\nimport Navbar from '@/components/Header/Navbar.vue';\n\nexport default {\n    name: 'DeleteItem',\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            locId: this.$route.params.locationId,\n            itemId: this.$route.params.itemId,\n            userId: '',\n            locationData: '',\n            locName: \"\",\n            locAddress: \"\",\n            itemName: \"\",\n            itemPrice: \"\",\n            itemsQty: 1,\n            description: \"\",\n            pickedCategory: \"\",\n            successMessage: '',\n            errorMessage: '',\n        }\n    },\n    async mounted() {\n        let user = localStorage.getItem('user-info');\n        if (!user) {\n            this.redirectTo({ val: 'sign-up' });\n        } else {\n\n            this.userId = JSON.parse(user).id;\n\n            this.canCurrentUserAccessThisLocation();\n\n            this.canUserAccessThisItem({\n                userIdIs: this.userId,\n                locationIdIs: this.locId,\n                itemIdIs: this.itemId,\n                redirectToPage: \"home\",\n            });\n\n            this.getItemInfo(this.userId, this.locId, this.itemId);\n\n        }\n    },\n    methods: {\n\n        ...mapMutations([\"canUserAccessThisItem\"]),\n        ...mapActions(['redirectTo']),\n\n        async canCurrentUserAccessThisLocation() {\n            let result = await axios.get(`\n            http://localhost:3000/locations?id=${this.locId}&userId=${this.userId}\n            `);\n            if (result.status == 200 && result.data.length > 0) {\n                this.locationData = result.data;\n                this.locName = this.locationData[0].name;\n                this.locAddress = this.locationData[0].address;\n            } else {\n                this.redirectTo({ val: 'home' });\n            }\n        },\n\n        async getItemInfo(userId, locId, itemId) {\n            let result = await axios.get(`\n                http://localhost:3000/items?userId=${userId}&locId=${locId}&id=${itemId}\n            `);\n            let itemDetails = result.data[0];\n            if (result.status == 200) {\n                this.itemName = itemDetails.name;\n                this.itemPrice = itemDetails.price;\n                this.itemsQty = itemDetails.qty;\n                this.description = itemDetails.description;\n                this.pickedCategory = itemDetails.catId;\n            }\n        },\n\n        async deleteItem() {\n            let result = await axios.delete(`http://localhost:3000/items/${this.itemId}`);\n\n            if (result.status == 200) {\n                this.successMessage = 'Item is deleted Successfully';\n                this.errorMessage = '';\n                setTimeout(() => {\n                    this.$router.push({ name: \"menu\", params: { locationId: this.locId } });\n                }, 2000);\n            } else {\n                this.successMessage = '';\n                this.errorMessage = 'Something went wrong, Try again';\n            }\n        },\n\n    },\n}\n</script>\n\n<style>\n.mb0 {\n    margin-bottom: 0;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}