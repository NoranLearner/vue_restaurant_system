{"ast":null,"code":"// For validate data\nimport useValidate from \"@vuelidate/core\";\nimport { required, minLength } from \"@vuelidate/validators\";\n// For Composition Api\nimport { reactive, computed } from \"vue\";\nexport default {\n  name: \"AddNewLocation\",\n  setup() {\n    // Data\n    const state = reactive({\n      name: '',\n      phone: '',\n      address: ''\n    });\n    // Validations\n    const rules = computed(() => {\n      return {\n        name: {\n          required,\n          minLength: minLength(10)\n        },\n        phone: {\n          required,\n          minLength: minLength(11)\n        },\n        address: {\n          required\n        }\n      };\n    });\n    // Write rules first\n    const v$ = useValidate(rules, state);\n    return {\n      state,\n      v$\n    };\n  },\n  data() {\n    return {};\n  },\n  methods: {\n    ...mapActions([\"redirectTo\"]),\n    async addLocation() {\n      // Activate Validation\n      this.v$.$validate();\n      if (!this.v$.$error) {\n        console.log(\"Form Validated Successfully\");\n        let result = await axios.post(`http://localhost:3000/locations`, {\n          name: this.state.name,\n          phone: this.state.phone,\n          address: this.state.address,\n          userId: this.userId\n        });\n        if (result.status == 201) {\n          // show success message\n          this.errorMessage = '';\n          this.successMessage = 'Added New Location';\n          this.redirectTo({\n            val: \"home\"\n          });\n          setTimeout(() => {\n            this.successMessage = '';\n            this.errorMessage = '';\n            this.state.name = '';\n            this.state.phone = '';\n            this.state.address = '';\n            this.v$.name.$errors[0].$message = '';\n            this.v$.phone.$errors[0].$message = '';\n            this.v$.address.$errors[0].$message = '';\n          }, 2000);\n        } else {\n          // show error message\n          this.successMessage = '';\n          this.errorMessage = 'Something went wrong, Try Again';\n        }\n      } else {\n        // console.warn(\"Form Validation Failed\");\n        this.successMessage = '';\n        this.errorMessage = 'You must fill in all required fields';\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAiDA;AACA,OAAOA,WAAU,MAAO,iBAAiB;AACzC,SAASC,QAAQ,EAAEC,SAAQ,QAAS,uBAAuB;AAC3D;AACA,SAASC,QAAQ,EAAEC,QAAO,QAAS,KAAK;AAExC,eAAe;EACXC,IAAI,EAAE,gBAAgB;EACtBC,KAAK,GAAG;IACJ;IACA,MAAMC,KAAI,GAAIJ,QAAQ,CAAC;MACnBE,IAAI,EAAE,EAAE;MACRG,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACb,CAAC,CAAC;IACF;IACA,MAAMC,KAAI,GAAIN,QAAQ,CAAC,MAAM;MACzB,OAAO;QACHC,IAAI,EAAE;UAAEJ,QAAQ;UAAEC,SAAS,EAAEA,SAAS,CAAC,EAAE;QAAE,CAAC;QAC5CM,KAAK,EAAE;UAAEP,QAAQ;UAAEC,SAAS,EAAEA,SAAS,CAAC,EAAE;QAAE,CAAC;QAC7CO,OAAO,EAAE;UAAER;QAAS;MACxB,CAAC;IACL,CAAC,CAAC;IACF;IACA,MAAMU,EAAC,GAAIX,WAAW,CAACU,KAAK,EAAEH,KAAK,CAAC;IACpC,OAAO;MAAEA,KAAK;MAAEI;IAAG,CAAC;EACxB,CAAC;EACDC,IAAI,GAAG;IACH,OAAO,CAEP;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,GAAGC,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7B,MAAMC,WAAW,GAAG;MAChB;MACA,IAAI,CAACJ,EAAE,CAACK,SAAS,EAAE;MACnB,IAAI,CAAC,IAAI,CAACL,EAAE,CAACM,MAAM,EAAE;QACjBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1C,IAAIC,MAAK,GAAI,MAAMC,KAAK,CAACC,IAAI,CAAE,iCAAgC,EAAE;UAC7DjB,IAAI,EAAE,IAAI,CAACE,KAAK,CAACF,IAAI;UACrBG,KAAK,EAAE,IAAI,CAACD,KAAK,CAACC,KAAK;UACvBC,OAAO,EAAE,IAAI,CAACF,KAAK,CAACE,OAAO;UAC3Bc,MAAM,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QACF,IAAIH,MAAM,CAACI,MAAK,IAAK,GAAG,EAAE;UACtB;UACA,IAAI,CAACC,YAAW,GAAI,EAAE;UACtB,IAAI,CAACC,cAAa,GAAI,oBAAoB;UAC1C,IAAI,CAACC,UAAU,CAAC;YAAEC,GAAG,EAAE;UAAO,CAAC,CAAC;UAChCC,UAAU,CAAC,MAAM;YACb,IAAI,CAACH,cAAa,GAAI,EAAE;YACxB,IAAI,CAACD,YAAW,GAAI,EAAE;YACtB,IAAI,CAAClB,KAAK,CAACF,IAAG,GAAI,EAAE;YACpB,IAAI,CAACE,KAAK,CAACC,KAAI,GAAI,EAAE;YACrB,IAAI,CAACD,KAAK,CAACE,OAAM,GAAI,EAAE;YACvB,IAAI,CAACE,EAAE,CAACN,IAAI,CAACyB,OAAO,CAAC,CAAC,CAAC,CAACC,QAAO,GAAI,EAAE;YACrC,IAAI,CAACpB,EAAE,CAACH,KAAK,CAACsB,OAAO,CAAC,CAAC,CAAC,CAACC,QAAO,GAAI,EAAE;YACtC,IAAI,CAACpB,EAAE,CAACF,OAAO,CAACqB,OAAO,CAAC,CAAC,CAAC,CAACC,QAAO,GAAI,EAAE;UAC5C,CAAC,EAAE,IAAI,CAAC;QACZ,OAAO;UACH;UACA,IAAI,CAACL,cAAa,GAAI,EAAE;UACxB,IAAI,CAACD,YAAW,GAAI,iCAAiC;QACzD;MACJ,OAAO;QACH;QACA,IAAI,CAACC,cAAa,GAAI,EAAE;QACxB,IAAI,CAACD,YAAW,GAAI,sCAAsC;MAC9D;IACJ;EACJ;AACJ,CAAC","names":["useValidate","required","minLength","reactive","computed","name","setup","state","phone","address","rules","v$","data","methods","mapActions","addLocation","$validate","$error","console","log","result","axios","post","userId","status","errorMessage","successMessage","redirectTo","val","setTimeout","$errors","$message"],"sourceRoot":"","sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/Locations/AddNewLocation.vue"],"sourcesContent":["<template>\n    <!-- Button trigger modal -->\n    <button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#addNewLocation\">\n        Add New Restaurant\n    </button>\n\n    <!-- Modal -->\n    <div class=\"modal fade\" id=\"addNewLocation\" tabindex=\"-1\" aria-labelledby=\"addNewLocationLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <!-- ********************************** -->\n                <div class=\"modal-header\">\n                    <h1 class=\"modal-title fs-5\" id=\"addNewLocationLabel\">Add New Restaurant</h1>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                </div>\n                <!-- ********************************** -->\n                <div class=\"modal-body\">\n                    <form @click.prevent>\n                        <div class=\"row g-3 align-items-center\">\n                            <div class=\"col-auto d-block mx-auto\">\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Restaurant Name\" v-model=\"state.name\">\n                            </div>\n                        </div>\n                        <br />\n                        <div class=\"row g-3 align-items-center\">\n                            <div class=\"col-auto d-block mx-auto\">\n                                <input type=\"email\" class=\"form-control\" placeholder=\"Restaurant Phone\" v-model=\"state.phone\">\n                            </div>\n                        </div>\n                        <br />\n                        <div class=\"row g-3 align-items-center\">\n                            <div class=\"col-auto d-block mx-auto\">\n                                <input type=\"password\" class=\"form-control\" placeholder=\"Restaurant Address\" v-model=\"state.address\">\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <!-- ********************************** -->\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                    <button type=\"button\" @click=\"addLocation()\" class=\"btn btn-primary\">Add Now</button>\n                </div>\n                <!-- ********************************** -->\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n// For validate data\nimport useValidate from \"@vuelidate/core\";\nimport { required, minLength } from \"@vuelidate/validators\";\n// For Composition Api\nimport { reactive, computed } from \"vue\";\n\nexport default {\n    name: \"AddNewLocation\",\n    setup() {\n        // Data\n        const state = reactive({\n            name: '',\n            phone: '',\n            address: '',\n        });\n        // Validations\n        const rules = computed(() => {\n            return {\n                name: { required, minLength: minLength(10) },\n                phone: { required, minLength: minLength(11) },\n                address: { required },\n            };\n        });\n        // Write rules first\n        const v$ = useValidate(rules, state);\n        return { state, v$ };\n    },\n    data() {\n        return {\n            \n        }\n    },\n    methods: {\n        ...mapActions([\"redirectTo\"]),\n        async addLocation() {\n            // Activate Validation\n            this.v$.$validate();\n            if (!this.v$.$error) {\n                console.log(\"Form Validated Successfully\");\n                let result = await axios.post(`http://localhost:3000/locations`, {\n                    name: this.state.name,\n                    phone: this.state.phone,\n                    address: this.state.address,\n                    userId: this.userId,\n                });\n                if (result.status == 201) {\n                    // show success message\n                    this.errorMessage = '';\n                    this.successMessage = 'Added New Location';\n                    this.redirectTo({ val: \"home\" });\n                    setTimeout(() => {\n                        this.successMessage = '';\n                        this.errorMessage = '';\n                        this.state.name = '';\n                        this.state.phone = '';\n                        this.state.address = '';\n                        this.v$.name.$errors[0].$message = '';\n                        this.v$.phone.$errors[0].$message = '';\n                        this.v$.address.$errors[0].$message = '';\n                    }, 2000);\n                } else {\n                    // show error message\n                    this.successMessage = '';\n                    this.errorMessage = 'Something went wrong, Try Again';\n                }\n            } else {\n                // console.warn(\"Form Validation Failed\");\n                this.successMessage = '';\n                this.errorMessage = 'You must fill in all required fields';\n            }\n        },\n    }\n};\n</script>\n\n<style></style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}