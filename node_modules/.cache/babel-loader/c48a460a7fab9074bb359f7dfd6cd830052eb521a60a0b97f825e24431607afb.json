{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-e4dd921e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn btn-secondary\"\n}, \"Add Category\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 0,\n  class: \"table caption-top\"\n};\nconst _hoisted_4 = {\n  class: \"float-end\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-danger text-white\"\n}, \"Delete All Categories\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-light\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Actions\")])], -1 /* HOISTED */));\nconst _hoisted_7 = {\n  scope: \"row\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-success text-white\"\n}, \"Update\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-danger text-white\"\n}, \"Delete\", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  key: 1,\n  role: \"alert\",\n  class: \"alert alert-warning mt15\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Navbar), _createVNode(_component_router_link, {\n    to: {\n      name: 'add-new-category',\n      params: {\n        locId: _ctx.locationId\n      }\n    }\n  }, {\n    default: _withCtx(() => [_hoisted_2]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"]), _createCommentVNode(\" ---------------------------------------- \"), _ctx.numOfCategories > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_3, [_createElementVNode(\"caption\", null, [_createElementVNode(\"span\", null, \" List Of Categories (\" + _toDisplayString(_ctx.numOfCategories) + \") \", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_4, [_createVNode(_component_router_link, {\n    to: {\n      name: 'delete-all-categories',\n      params: {\n        locationId: $data.locId\n      }\n    }\n  }, {\n    default: _withCtx(() => [_hoisted_5]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"])])]), _hoisted_6, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.listOfCategories, (cat, i) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: i\n    }, [_createElementVNode(\"th\", _hoisted_7, _toDisplayString(cat.name), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createVNode(_component_router_link, {\n      to: {\n        name: 'update-category',\n        params: {\n          catId: cat.id,\n          locationId: cat.locationId\n        }\n      }\n    }, {\n      default: _withCtx(() => [_hoisted_8]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), _createTextVNode(\"   \"), _createVNode(_component_router_link, {\n      to: {\n        name: 'delete-category',\n        params: {\n          catId: cat.id,\n          locationId: cat.locationId\n        }\n      }\n    }, {\n      default: _withCtx(() => [_hoisted_9]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), _createTextVNode(\"   \")])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, \" No Categories Added Yet \")), _createCommentVNode(\" ---------------------------------------- \")]);\n}","map":{"version":3,"mappings":";;;EACSA,KAAK,EAAC;AAAW;gEAGdC,oBAAqE;EAA7DC,IAAI,EAAC,QAAQ;EAACF,KAAK,EAAC;GAAoB,cAAY;;;EAMzDA,KAAK,EAAC;;;EAKCA,KAAK,EAAC;AAAW;gEAEfC,oBAAwE;EAAhED,KAAK,EAAC;AAA2B,GAAC,uBAAqB;gEAI3EC,oBAKQ;EALDD,KAAK,EAAC;AAAa,iBACtBC,oBAGK,0BAFDA,oBAAyB;EAArBE,KAAK,EAAC;AAAK,GAAC,MAAI,gBACpBF,oBAA4B;EAAxBE,KAAK,EAAC;AAAK,GAAC,SAAO;;EAKnBA,KAAK,EAAC;AAAK;gEAGPF,oBAA0D;EAAlDD,KAAK,EAAC;AAA4B,GAAC,QAAM;gEAIjDC,oBAAyD;EAAjDD,KAAK,EAAC;AAA2B,GAAC,QAAM;;;EAQ/DI,IAAI,EAAC,OAAO;EAACJ,KAAK,EAAC;;;;;uBA3C5BK,oBAiDM,OAjDNC,UAiDM,GAhDFC,aAAiBC,oBACjBD,aAEcE;IAFAC,EAAE;MAAAC;MAAAC;QAAAC,OAA2CC;MAAU;IAAA;;sBACjE,MAAqE,CAArEC,UAAqE;;6BAIzEC,iEAAiD,EAEVF,oBAAe,sBAAtDT,oBAgCQ,SAhCRY,UAgCQ,GA/BJhB,oBASU,kBARNA,oBAEO,cAFD,uBACkB,oBAAGa,oBAAe,IAAG,IAC7C,iBACAb,oBAIO,QAJPiB,UAIO,GAHHX,aAEcE;IAFAC,EAAE;MAAAC;MAAAC;QAAAO,YAAqDC;MAAK;IAAA;;sBACtE,MAAwE,CAAxEC,UAAwE;;iCAIpFC,UAKQ,EACRrB,oBAcQ,mCAbJI,oBAYKkB,6BAZkBT,qBAAgB,GAA3BU,GAAG,EAAEC,CAAC;yBAAlBpB,oBAYK;MAZqCqB,GAAG,EAAED;IAAC,IAC5CxB,oBAAmC,MAAnC0B,UAAmC,mBAAhBH,GAAG,CAACb,IAAI,kBAC3BV,oBASK,aARDM,aAEcE;MAFAC,EAAE;QAAAC;QAAAC;UAAAgB,OAA4CJ,GAAG,CAACK,EAAE;UAAAV,YAAaK,GAAG,CAACL;QAAU;MAAA;;wBACzF,MAA0D,CAA1DW,UAA0D;;kEAChD,KAEd,gBAEcrB;MAFAC,EAAE;QAAAC;QAAAC;UAAAgB,OAA4CJ,GAAG,CAACK,EAAE;UAAAV,YAAaK,GAAG,CAACL;QAAU;MAAA;;wBACzF,MAAyD,CAAzDY,UAAyD;;kEAC/C,KAElB;uDAKZ1B,oBAEM,OAFN2B,WAEM,EAFoD,2BAE1D,IAEAhB,iEAAiD","names":["class","_createElementVNode","type","scope","role","_createElementBlock","_hoisted_1","_createVNode","_component_Navbar","_component_router_link","to","name","params","locId","_ctx","_hoisted_2","_createCommentVNode","_hoisted_3","_hoisted_4","locationId","$data","_hoisted_5","_hoisted_6","_Fragment","cat","i","key","_hoisted_7","catId","id","_hoisted_8","_hoisted_9","_hoisted_10"],"sourceRoot":"","sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/Menu/ViewCategories.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <Navbar></Navbar>\n        <router-link :to=\"{name: 'add-new-category', params:{locId:locationId}}\">\n            <button type=\"button\" class=\"btn btn-secondary\">Add Category</button>\n        </router-link>\n        \n\n        <!-- ---------------------------------------- -->\n\n        <table class=\"table caption-top\" v-if=\"numOfCategories>0\">\n            <caption>\n                <span>\n                    List Of Categories ({{ numOfCategories }})\n                </span>\n                <span class=\"float-end\">\n                    <router-link :to=\"{name: 'delete-all-categories', params:{locationId:locId}}\">\n                        <button class=\"btn btn-danger text-white\">Delete All Categories</button>\n                    </router-link>\n                </span>\n            </caption>\n            <thead class=\"table-light\">\n                <tr>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"(cat, i) in listOfCategories\" :key=\"i\">\n                    <th scope=\"row\">{{ cat.name }}</th>\n                    <td>\n                        <router-link :to=\"{name: 'update-category', params: {catId: cat.id, locationId:cat.locationId}}\">\n                            <button class=\"btn btn-success text-white\">Update</button>\n                        </router-link>\n                        &nbsp;\n                        <router-link :to=\"{name: 'delete-category', params: {catId: cat.id, locationId:cat.locationId}}\">\n                            <button class=\"btn btn-danger text-white\">Delete</button>\n                        </router-link>\n                        &nbsp;\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n        <div role=\"alert\" class=\"alert alert-warning mt15\" v-else>\n            No Categories Added Yet\n        </div>\n\n        <!-- ---------------------------------------- -->\n\n    </div>\n</template>\n\n<script>\n\n// To Use HTTP Request\nimport axios from \"axios\";\n// For redirect to links\nimport { mapActions, mapState, mapMutations } from \"vuex\";\nimport Navbar from '@/components/Header/Navbar.vue';\n\nexport default {\n    name: 'ViewCategories',\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            locId: this.$route.params.locationId,\n            userId: \"\",\n            locName: \"\",\n            locAddress: \"\",\n        }\n    },\n    computed: {\n        ...mapState([\n            \"numOfCategories\",\n            \"listOfCategories\"\n        ]),\n    },\n    mounted() {\n        let user = localStorage.getItem('user-info');\n        if (!user) {\n            // Using name in router file\n            this.redirectTo({ val: 'sign-up' });\n        } else {\n            this.userId = JSON.parse(user).id;\n            this.userName = JSON.parse(user).name;\n            this.displayAllCategories({\n                userIdIs: this.userId,\n                locationIdIs: this.locId\n            });\n            this.canUserAccessThisLocation({\n                userIdIs: this.userId,\n                locationIdIs: this.locId,\n                redirectToPage: \"home\",\n            });\n            this.getLocationInfo(this.userId, this.locId);\n        }\n    },\n    methods: {\n        ...mapMutations([\n            \"isLoggedInUser\",\n            \"displayAllCategories\",\n            \"canUserAccessThisLocation\"\n        ]),\n        ...mapActions(['redirectTo']),\n        async getLocationInfo(userId, locId) {\n            let result = await axios.get(`http://localhost:3000/locations?userId=${userId}&id=${locId}`);\n            let locDetails = [];\n            if (result.status == 200) {\n                locDetails = result.data;\n                this.locName = locDetails[0].name;\n                this.locAddress = locDetails[0].address;\n            }\n        },\n    },\n}\n</script>\n\n<style scoped>\n.mb {\n    margin-bottom: 0;\n}\n.mt15 {\n    margin-top: 15px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}