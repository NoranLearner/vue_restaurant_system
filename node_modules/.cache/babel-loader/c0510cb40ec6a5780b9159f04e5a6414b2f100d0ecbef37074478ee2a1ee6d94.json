{"ast":null,"code":"import axios from \"axios\";\n// For redirect to links\nimport { mapActions } from \"vuex\";\n// For validate data\nimport useValidate from \"@vuelidate/core\";\nimport { required, email, minLength } from \"@vuelidate/validators\";\nexport default {\n  name: 'SignUpForm',\n  data() {\n    return {\n      v$: useValidate(),\n      name: '',\n      email: '',\n      password: '',\n      successMessage: \"\",\n      errorMessage: \"\",\n      userEmailExists: ''\n    };\n  },\n  validations() {\n    return {\n      name: {\n        required,\n        minLength: minLength(10)\n      },\n      email: {\n        required,\n        email\n      },\n      password: {\n        required,\n        minLength: minLength(10)\n      }\n    };\n  },\n  mounted() {\n    let user = localStorage.getItem('user-info');\n    if (user) {\n      this.redirectTo({\n        val: 'home'\n      });\n    }\n  },\n  methods: {\n    ...mapActions(['redirectTo']),\n    async validateEmail() {\n      let res = await axios.get(`http://localhost:3000/users?email=${this.email}`);\n      if (res.status == 200) {\n        this.userEmailExists = res.data;\n        if (this.userEmailExists.length != 1) {\n          this.successMessage = \"\";\n          this.errorMessage = \"\";\n          this.signUpNow();\n        } else {\n          this.successMessage = \"\";\n          this.errorMessage = \"This email already exists\";\n        }\n      }\n    },\n    async signUpNow() {\n      this.v$.$validate();\n      if (!this.v$.$error) {\n        let result = await axios.post('http://localhost:3000/users', {\n          name: this.name,\n          email: this.email,\n          password: this.password\n        });\n        if (result.status == 201) {\n          // save user data in local storage\n          localStorage.setItem(\"user-info\", JSON.stringify(result.data));\n          this.errorMessage = '';\n          this.successMessage = 'Loading ....';\n          setTimeout(() => {\n            // redirect to home page\n            this.redirectTo({\n              val: 'home'\n            });\n          }, 2000);\n        } else {\n          this.successMessage = '';\n          this.errorMessage = 'Error on Adding New User';\n        }\n      } else {\n        this.successMessage = '';\n        this.errorMessage = 'You must fill in all fields';\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","mapActions","useValidate","required","email","minLength","name","data","v$","password","successMessage","errorMessage","userEmailExists","validations","mounted","user","localStorage","getItem","redirectTo","val","methods","validateEmail","res","get","status","length","signUpNow","$validate","$error","result","post","setItem","JSON","stringify","setTimeout"],"sourceRoot":"","sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/SignUp/SignUpForm.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <h1 class=\"text-center\">Sign Up</h1>\n        <form @click.prevent>\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <!-- https://getbootstrap.com/docs/5.0/forms/floating-labels/ -->\n                    <div class=\"form-floating mb-3\" :class=\"{ 'form-group--error': v$.email.$error }\">\n                        <input type=\"text\" class=\"form-control w300\" id=\"floatingEmail\" placeholder=\"Enter Your Name\"\n                            v-model.trim=\"name\">\n                        <label for=\"floatingEmail\">Enter Your Name</label>\n                        <span class=\"error-feedback\" v-if=\"v$.name.$error\">{{ v$.name.$errors[0].$message }}</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <div class=\"form-floating mb-3\" :class=\"{ 'form-group--error': v$.email.$error }\">\n                        <input type=\"email\" class=\"form-control w300\" id=\"floatingEmail\" placeholder=\"Enter Your Email\"\n                            v-model.trim=\"email\">\n                        <label for=\"floatingEmail\">Enter Your Email</label>\n                        <span class=\"error-feedback\" v-if=\"v$.email.$error\">{{ v$.email.$errors[0].$message }}</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <div class=\"form-floating\" :class=\"{ 'form-group--error': v$.password.$error }\">\n                        <input type=\"password\" class=\"form-control w300\" id=\"floatingPassword\" placeholder=\"Enter Your Password\"\n                            v-model.trim=\"password\">\n                        <label for=\"floatingPassword\">Enter Your Password</label>\n                        <span class=\"error-feedback\" v-if=\"v$.password.$error\">{{ v$.password.$errors[0].$message }}</span>\n                    </div>\n                </div>\n            </div>\n            <br />\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n\n                    <button type=\"submit\" @click=\"validateEmail()\" class=\"btn btn-primary w300\"> Sign Up Now </button>\n                    \n                    <div class=\"d-flex justify-content-center\">\n                        <button type=\"button\" @click=\"redirectTo({ val: 'login' })\" class=\"btn btn-link\">Have an account, Login Now</button>\n                    </div>\n\n                </div>\n            </div>\n            <br />\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto alert alert-success\" v-if=\"successMessage.length>0\">\n                    {{ successMessage }}\n                </div>\n                <div class=\"col-auto d-block mx-auto alert alert-danger\" v-if=\"errorMessage.length>0\">\n                    {{ errorMessage }}\n                </div>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n// For redirect to links\nimport { mapActions } from \"vuex\";\n// For validate data\nimport useValidate from \"@vuelidate/core\";\nimport { required, email, minLength } from \"@vuelidate/validators\";\n\nexport default {\n    name: 'SignUpForm',\n    data() {\n        return {\n            v$: useValidate(),\n            name: '',\n            email: '',\n            password: '',\n            successMessage: \"\",\n            errorMessage: \"\",\n            userEmailExists: '',\n        }\n    },\n    validations() {\n        return {\n            name: { required, minLength: minLength(10) },\n            email: { required, email },\n            password: { required, minLength: minLength(10) },\n        }\n    },\n    mounted() {\n        let user = localStorage.getItem('user-info');\n        if (user) {\n            this.redirectTo({ val: 'home' });\n        }\n    },\n    methods: {\n\n        ...mapActions(['redirectTo']),\n\n        async validateEmail() {\n            let res = await axios.get(`http://localhost:3000/users?email=${this.email}`);\n            if (res.status==200) {\n                this.userEmailExists = res.data;\n                if (this.userEmailExists.length != 1) {\n                    this.successMessage = \"\";\n                    this.errorMessage = \"\";\n                    this.signUpNow();\n                } else {\n                    this.successMessage = \"\";\n                    this.errorMessage = \"This email already exists\";\n                }\n            }\n        },\n\n        async signUpNow() {\n            this.v$.$validate();\n            if (!this.v$.$error) {\n\n                let result = await axios.post('http://localhost:3000/users', {\n                    name: this.name,\n                    email: this.email,\n                    password: this.password,\n                });\n\n                if (result.status == 201) {\n\n                    // save user data in local storage\n                    localStorage.setItem(\"user-info\", JSON.stringify(result.data));\n\n                    this.errorMessage = '';\n                    this.successMessage = 'Loading ....';\n\n                    setTimeout(() => {\n                        // redirect to home page\n                        this.redirectTo({ val: 'home' });\n                    }, 2000);\n\n                    \n                } else {\n                    this.successMessage = '';\n                    this.errorMessage = 'Error on Adding New User';\n                }\n            } else {\n                this.successMessage = '';\n                this.errorMessage = 'You must fill in all fields';\n            }\n        },\n    },\n}\n</script>\n\n<style scoped lang=\"scss\">\n.w300 {\n    min-width: 300px;\n}\n\n.error-feedback,\n.form-group--error {\n    color: red;\n    font-size: 0.85em;\n}\n\n.form-group--error input,\n.form-group--error textarea,\n.form-group--error select {\n    border-color: red;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}