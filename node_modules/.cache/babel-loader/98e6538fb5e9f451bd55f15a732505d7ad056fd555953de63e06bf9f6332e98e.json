{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn btn-secondary float-start\"\n}, \" View/Add Categories \", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0,\n  type: \"button\",\n  class: \"btn btn-secondary float-end\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"clearfix\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"text-center\"\n};\nconst _hoisted_6 = {\n  class: \"mb\"\n};\nconst _hoisted_7 = {\n  class: \"text-muted\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Navbar), _createElementVNode(\"div\", null, [_createVNode(_component_router_link, {\n    to: {\n      name: 'view-categories',\n      params: {\n        locId: $data.locationId\n      }\n    }\n  }, {\n    default: _withCtx(() => [_hoisted_2]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"]), _ctx.numOfCategories > 0 ? (_openBlock(), _createElementBlock(\"button\", _hoisted_3, \" Add New Items \")) : _createCommentVNode(\"v-if\", true)]), _hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h1\", _hoisted_6, _toDisplayString(_ctx.locName), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_7, _toDisplayString(_ctx.locAddress), 1 /* TEXT */)]), _createCommentVNode(\" <div>\\n            Is User Logged In? {{ isUserLoggedIn }}\\n            <br/>\\n            User Id Is: {{ LoggedInUserId }}\\n            <br/>\\n            Num of Categories? {{ numOfCategories }}\\n            <br />\\n            Categories Array: {{ listOfCategories }}\\n            <br />\\n        </div> \")]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAW;gCAKVC,oBAES;EAFDC,IAAI,EAAC,QAAQ;EAACF,KAAK,EAAC;GAAgC,uBAE5D;;;EAGIE,IAAI,EAAC,QAAQ;EAACF,KAAK,EAAC;;gCAKhCC,oBAA4B;EAAvBD,KAAK,EAAC;AAAU;;EAEhBA,KAAK,EAAC;AAAa;;EAChBA,KAAK,EAAC;AAAI;;EACXA,KAAK,EAAC;AAAY;;;;uBAnB7BG,oBAiCM,OAjCNC,UAiCM,GAhCFC,aAAUC,oBAEVL,oBAUM,cATFI,aAIcE;IAJAC,EAAE;MAAAC;MAAAC;QAAAC,OAA8CC;MAAU;IAAA;;sBACpE,MAES,CAFTC,UAES;;6BAGmDC,oBAAe,sBAA/EX,oBAEa,UAFbY,UAEa,EAFwE,iBAEjF,0CAGRC,UAA4B,EAE5Bf,oBAGM,OAHNgB,UAGM,GAFFhB,oBAAiC,MAAjCiB,UAAiC,mBAAfJ,YAAO,kBACzBb,oBAA0C,KAA1CkB,UAA0C,mBAAjBL,eAAU,oBAGvCM,2UASU","names":["class","_createElementVNode","type","_createElementBlock","_hoisted_1","_createVNode","_component_Navbar","_component_router_link","to","name","params","locId","$data","_hoisted_2","_ctx","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_createCommentVNode"],"sourceRoot":"","sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/Menu/Menu.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <Navbar />\n\n        <div>\n            <router-link :to=\"{ name: 'view-categories', params: { locId: locationId } }\">\n                <button type=\"button\" class=\"btn btn-secondary float-start\">\n                    View/Add Categories\n                </button>\n            </router-link>\n\n            <button type=\"button\" class=\"btn btn-secondary float-end\" v-if=\"numOfCategories > 0\">\n                    Add New Items\n                </button>\n        </div>\n\n        <div class=\"clearfix\"></div>\n\n        <div class=\"text-center\">\n            <h1 class=\"mb\">{{ locName }}</h1>\n            <p class=\"text-muted\">{{ locAddress }}</p>\n        </div>\n\n        <!-- <div>\n            Is User Logged In? {{ isUserLoggedIn }}\n            <br/>\n            User Id Is: {{ LoggedInUserId }}\n            <br/>\n            Num of Categories? {{ numOfCategories }}\n            <br />\n            Categories Array: {{ listOfCategories }}\n            <br />\n        </div> -->\n\n    </div>\n</template>\n\n<script>\n// To Use HTTP Request\nimport axios from \"axios\";\n// For redirect to links\nimport { mapActions, mapState, mapMutations } from \"vuex\";\nimport Navbar from \"@/components/Header/Navbar.vue\";\n\nexport default {\n    name: \"Menu\",\n    components: {\n        Navbar,\n    },\n    data() {\n        return {\n            userId: \"\",\n            userName: \"\",\n            locationId: this.$route.params.locationId,\n        };\n    },\n    computed: {\n        ...mapState([\n            \"isUserLoggedIn\",\n            \"LoggedInUserId\",\n            \"numOfCategories\",\n            \"listOfCategories\",\n        ]),\n    },\n    async mounted() {\n        let user = localStorage.getItem(\"user-info\");\n        if (!user) {\n            // Using name in router file\n            this.redirectTo({ val: \"sign-up\" });\n        } else {\n            this.userId = JSON.parse(user).id;\n            this.userName = JSON.parse(user).name;\n            this.isLoggedInUser();\n            this.displayAllCategories({\n                userIdIs: this.userId,\n                locationIdIs: this.locationId,\n            });\n            this.canUserAccessThisLocation({\n                userIdIs: this.userId,\n                locationIdIs: this.locationId,\n                redirectToPage: \"home\",\n            });\n        }\n    },\n    methods: {\n        ...mapMutations([\n            \"isLoggedInUser\",\n            \"displayAllCategories\",\n            \"canUserAccessThisLocation\",\n        ]),\n        ...mapActions([\"redirectTo\"]),\n    }\n}\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}