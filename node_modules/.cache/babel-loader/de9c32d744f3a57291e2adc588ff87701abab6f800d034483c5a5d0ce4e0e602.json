{"ast":null,"code":"// For redirect to links\nimport { mapActions, mapMutations } from \"vuex\";\nimport Navbar from '@/components/Header/Navbar.vue';\nexport default {\n  name: 'ViewCategories',\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      locId: this.$route.params.locationId,\n      userId: \"\"\n    };\n  },\n  mounted() {\n    let user = localStorage.getItem('user-info');\n    if (!user) {\n      // Using name in router file\n      this.redirectTo({\n        val: 'sign-up'\n      });\n    } else {\n      this.userId = JSON.parse(user).id;\n      this.userName = JSON.parse(user).name;\n      this.displayAllCategories({\n        userIdIs: this.userId,\n        locationIdIs: this.locId\n      });\n      this.canUserAccessThisLocation({\n        userIdIs: this.userId,\n        locationIdIs: this.locId,\n        redirectToPage: \"home\"\n      });\n      this.getLocationInfo(this.userId, this.locId);\n    }\n  }\n};","map":{"version":3,"mappings":"AAcA;AACA,SAASA,UAAU,EAAEC,YAAW,QAAS,MAAM;AAC/C,OAAOC,MAAK,MAAO,gCAAgC;AAEnD,eAAe;EACXC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,IAAI,GAAG;IACH,OAAO;MACHC,KAAK,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,UAAU;MACpCC,MAAM,EAAE;IACZ;EACJ,CAAC;EACDC,OAAO,GAAG;IACN,IAAIC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC5C,IAAI,CAACF,IAAI,EAAE;MACP;MACA,IAAI,CAACG,UAAU,CAAC;QAAEC,GAAG,EAAE;MAAU,CAAC,CAAC;IACvC,OAAO;MACH,IAAI,CAACN,MAAK,GAAIO,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC,CAACO,EAAE;MACjC,IAAI,CAACC,QAAO,GAAIH,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC,CAACT,IAAI;MACrC,IAAI,CAACkB,oBAAoB,CAAC;QACtBC,QAAQ,EAAE,IAAI,CAACZ,MAAM;QACrBa,YAAY,EAAE,IAAI,CAACjB;MACvB,CAAC,CAAC;MACF,IAAI,CAACkB,yBAAyB,CAAC;QAC3BF,QAAQ,EAAE,IAAI,CAACZ,MAAM;QACrBa,YAAY,EAAE,IAAI,CAACjB,KAAK;QACxBmB,cAAc,EAAE;MACpB,CAAC,CAAC;MACF,IAAI,CAACC,eAAe,CAAC,IAAI,CAAChB,MAAM,EAAE,IAAI,CAACJ,KAAK,CAAC;IACjD;EACJ;AACJ","names":["mapActions","mapMutations","Navbar","name","components","data","locId","$route","params","locationId","userId","mounted","user","localStorage","getItem","redirectTo","val","JSON","parse","id","userName","displayAllCategories","userIdIs","locationIdIs","canUserAccessThisLocation","redirectToPage","getLocationInfo"],"sourceRoot":"","sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/Menu/ViewCategories.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <Navbar></Navbar>\n        <router-link :to=\"{name: 'add-new-category', params:{locId:locationId}}\">\n            <button type=\"button\" class=\"btn btn-secondary\">Add Category</button>\n        </router-link>\n        &nbsp;\n        <router-link :to=\"{name: 'menu', params:{locId:locationId}}\">\n            <button type=\"button\" class=\"btn btn-light\">Back To Menu</button>\n        </router-link>\n    </div>\n</template>\n\n<script>\n// For redirect to links\nimport { mapActions, mapMutations } from \"vuex\";\nimport Navbar from '@/components/Header/Navbar.vue';\n\nexport default {\n    name: 'ViewCategories',\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            locId: this.$route.params.locationId,\n            userId: \"\",\n        }\n    },\n    mounted() {\n        let user = localStorage.getItem('user-info');\n        if (!user) {\n            // Using name in router file\n            this.redirectTo({ val: 'sign-up' });\n        } else {\n            this.userId = JSON.parse(user).id;\n            this.userName = JSON.parse(user).name;\n            this.displayAllCategories({\n                userIdIs: this.userId,\n                locationIdIs: this.locId\n            });\n            this.canUserAccessThisLocation({\n                userIdIs: this.userId,\n                locationIdIs: this.locId,\n                redirectToPage: \"home\",\n            });\n            this.getLocationInfo(this.userId, this.locId);\n        }\n    },\n}\n</script>\n\n<style scoped></style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}