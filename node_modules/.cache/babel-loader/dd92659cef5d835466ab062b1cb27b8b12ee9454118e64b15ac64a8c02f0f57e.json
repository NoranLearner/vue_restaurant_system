{"ast":null,"code":"import { mapActions } from \"vuex\";\nimport useValidate from \"@vuelidate/core\";\nimport { required, email, minLength } from \"@vuelidate/validators\";\n// For Composition Api\nimport { reactive, computed } from \"vue\";\nexport default {\n  name: \"LoginForm\",\n  setup() {\n    // Data\n    const state = reactive({\n      email: \"\",\n      password: \"\"\n    });\n    // Validations\n    const rules = computed(() => {\n      return {\n        email: {\n          required,\n          email\n        },\n        password: {\n          required,\n          minLength: minLength(10)\n        }\n      };\n    });\n    // Write rules first\n    const v$ = useValidate(rules, state);\n  },\n  data() {\n    return {};\n  },\n  methods: {\n    /* signupPage(){\n            // Use name in router file\n            this.$router.push({name:'sign-up'});\n        }, */\n    ...mapActions([\"redirectTo\"]),\n    loginUser() {\n      this.v$.$validate();\n      if (!this.v$.$error) {\n        console.log(\"Form Validated Successfully\");\n      } else {\n        console.log(\"Form Validation Failed\");\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAqCA,SAASA,UAAS,QAAS,MAAM;AACjC,OAAOC,WAAU,MAAO,iBAAiB;AACzC,SAASC,QAAQ,EAAEC,KAAK,EAAEC,SAAQ,QAAS,uBAAuB;AAClE;AACA,SAASC,QAAQ,EAAEC,QAAO,QAAS,KAAK;AACxC,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,KAAK,GAAG;IACJ;IACA,MAAMC,KAAI,GAAIJ,QAAQ,CAAC;MACnBF,KAAK,EAAE,EAAE;MACTO,QAAQ,EAAE;IACd,CAAC,CAAC;IACF;IACA,MAAMC,KAAI,GAAIL,QAAQ,CAAC,MAAM;MACzB,OAAO;QACHH,KAAK,EAAE;UAAED,QAAQ;UAAEC;QAAM,CAAC;QAC1BO,QAAQ,EAAE;UAAER,QAAQ;UAAEE,SAAS,EAAEA,SAAS,CAAC,EAAE;QAAE;MACnD,CAAC;IACL,CAAC,CAAC;IACF;IACA,MAAMQ,EAAC,GAAIX,WAAW,CAACU,KAAK,EAAEF,KAAK;EACvC,CAAC;EACDI,IAAI,GAAG;IACH,OAAO,CACP,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL;;;;IAIA,GAAGd,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7Be,SAAS,GAAG;MACR,IAAI,CAACH,EAAE,CAACI,SAAS,EAAE;MACnB,IAAI,CAAC,IAAI,CAACJ,EAAE,CAACK,MAAM,EAAE;QACjBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC9C,OAAO;QACHD,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACzC;IACJ;EACJ;AACJ,CAAC","names":["mapActions","useValidate","required","email","minLength","reactive","computed","name","setup","state","password","rules","v$","data","methods","loginUser","$validate","$error","console","log"],"sourceRoot":"","sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/Login/LoginForm.vue"],"sourcesContent":["<template>\n    <form @click.prevent>\n        <h1>Login</h1>\n        <div class=\"row g-3 align-items-center\">\n            <div class=\"col-auto d-block mx-auto\">\n                <input type=\"email\" class=\"form-control\" placeholder=\"Enter Your Email\" v-model=\"email\" />\n                <span class=\"error-feedback\" v-if=\"v$.email.$error\">{{\n                    v$.email.$errors[0].$message\n                }}</span>\n            </div>\n        </div>\n        <br />\n        <div class=\"row g-3 align-items-center\">\n            <div class=\"col-auto d-block mx-auto\">\n                <input type=\"password\" class=\"form-control\" placeholder=\"Enter Your Password\" v-model=\"password\" />\n                <span class=\"error-feedback\" v-if=\"v$.password.$error\">{{\n                    v$.password.$errors[0].$message\n                }}</span>\n            </div>\n        </div>\n        <br />\n        <div class=\"row g-3 align-items-center\">\n            <div class=\"col-auto d-block mx-auto\">\n                <button type=\"submit\" class=\"btn btn-secondary\" @click=\"loginUser()\">\n                    Login Now\n                </button>\n                &nbsp;\n                <!-- <button type=\"button\" class=\"btn btn-link\" @click=\"signupPage()\">Sign Up</button> -->\n                <button type=\"button\" class=\"btn btn-link\" @click=\"redirectTo({ val: 'sign-up' })\">\n                    Sign Up\n                </button>\n            </div>\n        </div>\n    </form>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\nimport useValidate from \"@vuelidate/core\";\nimport { required, email, minLength } from \"@vuelidate/validators\";\n// For Composition Api\nimport { reactive, computed } from \"vue\";\nexport default {\n    name: \"LoginForm\",\n    setup() {\n        // Data\n        const state = reactive({\n            email: \"\",\n            password: \"\",\n        });\n        // Validations\n        const rules = computed(() => {\n            return {\n                email: { required, email },\n                password: { required, minLength: minLength(10) },\n            };\n        });\n        // Write rules first\n        const v$ = useValidate(rules, state)\n    },\n    data() {\n        return {\n        };\n    },\n    methods: {\n        /* signupPage(){\n                // Use name in router file\n                this.$router.push({name:'sign-up'});\n            }, */\n        ...mapActions([\"redirectTo\"]),\n        loginUser() {\n            this.v$.$validate();\n            if (!this.v$.$error) {\n                console.log(\"Form Validated Successfully\");\n            } else {\n                console.log(\"Form Validation Failed\");\n            }\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.error-feedback {\n    color: red;\n    font-size: 0.85em;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}