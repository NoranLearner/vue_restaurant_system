{"ast":null,"code":"import Navbar from '@/components/Header/Navbar.vue';\nimport axios from \"axios\";\n// For redirect to links\nimport { mapActions } from \"vuex\";\n// For validate data\nimport useValidate from \"@vuelidate/core\";\nimport { required, email, minLength } from \"@vuelidate/validators\";\nexport default {\n  name: \"UpdateProfileForm\",\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      v$: useValidate(),\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      userId: \"\",\n      updateError: \"\"\n    };\n  },\n  validations() {\n    return {\n      name: {\n        required,\n        minLength: minLength(10)\n      },\n      email: {\n        required,\n        email\n      },\n      password: {\n        required,\n        minLength: minLength(10)\n      }\n    };\n  },\n  mounted() {\n    let user = localStorage.getItem(\"user-info\");\n    if (user) {\n      this.name = JSON.parse(user).name;\n      this.email = JSON.parse(user).email;\n      this.password = JSON.parse(user).password;\n      this.userId = JSON.parse(user).id;\n    } else {\n      this.redirectTo({\n        val: 'sign-up'\n      });\n    }\n  },\n  methods: {\n    ...mapActions(['redirectTo']),\n    async updateProfileNow() {\n      this.v$.$validate();\n      if (!this.v$.$error) {\n        console.log(\"Form Validated Successfully\");\n        // Update Date\n        let result = await axios.put(`http://localhost:3000/users/${this.userId}`, {\n          name: this.name,\n          email: this.email,\n          password: this.password\n        });\n        if (result.status == 200) {\n          console.log(\"Profile is Updated Successfully\");\n          // save user data in local storage\n          localStorage.setItem(\"user-info\", JSON.stringify(result.data));\n          // redirect to home page\n          this.redirectTo({\n            val: 'profile'\n          });\n          // this.$router.push({ name: \"profile\", params:{pageTitle: \"Profile Page\"}})\n        } else {\n          this.updateError = \"Something Went Wrong, Try Again\";\n        }\n      } else {\n        this.updateError = \"Something Went Wrong, Refresh The Page\";\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AA6CA,OAAOA,MAAK,MAAO,gCAAgC;AACnD,OAAOC,KAAI,MAAO,OAAO;AACzB;AACA,SAASC,UAAS,QAAS,MAAM;AACjC;AACA,OAAOC,WAAU,MAAO,iBAAiB;AACzC,SAASC,QAAQ,EAAEC,KAAK,EAAEC,SAAQ,QAAS,uBAAuB;AAElE,eAAe;EACXC,IAAI,EAAE,mBAAmB;EACzBC,UAAU,EAAE;IACRR;EACJ,CAAC;EACDS,IAAI,GAAG;IACH,OAAO;MACHC,EAAE,EAAEP,WAAW,EAAE;MACjBI,IAAI,EAAE,EAAE;MACRF,KAAK,EAAE,EAAE;MACTM,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,WAAW,EAAE;IACjB;EACJ,CAAC;EACDC,WAAW,GAAG;IACV,OAAO;MACHP,IAAI,EAAE;QAAEH,QAAQ;QAAEE,SAAS,EAAEA,SAAS,CAAC,EAAE;MAAE,CAAC;MAC5CD,KAAK,EAAE;QAAED,QAAQ;QAAEC;MAAM,CAAC;MAC1BM,QAAQ,EAAE;QAAEP,QAAQ;QAAEE,SAAS,EAAEA,SAAS,CAAC,EAAE;MAAE;IACnD;EACJ,CAAC;EACDS,OAAO,GAAG;IACN,IAAIC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC5C,IAAIF,IAAI,EAAE;MACN,IAAI,CAACT,IAAG,GAAIY,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAACT,IAAI;MACjC,IAAI,CAACF,KAAI,GAAIc,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAACX,KAAK;MACnC,IAAI,CAACM,QAAO,GAAIQ,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAACL,QAAQ;MACzC,IAAI,CAACC,MAAK,GAAIO,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAACK,EAAE;IACrC,OAAO;MACH,IAAI,CAACC,UAAU,CAAC;QAAEC,GAAG,EAAE;MAAU,CAAC,CAAC;IACvC;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,GAAGtB,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7B,MAAMuB,gBAAgB,GAAG;MACrB,IAAI,CAACf,EAAE,CAACgB,SAAS,EAAE;MACnB,IAAI,CAAC,IAAI,CAAChB,EAAE,CAACiB,MAAM,EAAE;QACjBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1C;QACA,IAAIC,MAAK,GAAI,MAAM7B,KAAK,CAAC8B,GAAG,CAAE,+BAA8B,IAAI,CAACnB,MAAO,EAAC,EAAE;UACvEL,IAAI,EAAE,IAAI,CAACA,IAAI;UACfF,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBM,QAAQ,EAAE,IAAI,CAACA;QACnB,CAAC,CAAC;QACF,IAAImB,MAAM,CAACE,MAAK,IAAK,GAAG,EAAE;UACtBJ,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;UAC9C;UACAZ,YAAY,CAACgB,OAAO,CAAC,WAAW,EAAEd,IAAI,CAACe,SAAS,CAACJ,MAAM,CAACrB,IAAI,CAAC,CAAC;UAC9D;UACA,IAAI,CAACa,UAAU,CAAC;YAAEC,GAAG,EAAE;UAAU,CAAC,CAAC;UACnC;QACJ,OAAO;UACH,IAAI,CAACV,WAAU,GAAI,iCAAiC;QACxD;MACJ,OAAO;QACH,IAAI,CAACA,WAAU,GAAI,wCAAwC;MAC/D;IACJ;EACJ;AACJ","names":["Navbar","axios","mapActions","useValidate","required","email","minLength","name","components","data","v$","password","userId","updateError","validations","mounted","user","localStorage","getItem","JSON","parse","id","redirectTo","val","methods","updateProfileNow","$validate","$error","console","log","result","put","status","setItem","stringify"],"sourceRoot":"","sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/Profile/UpdateProfileForm.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n\n        <Navbar></Navbar>\n\n        <form @click.prevent>\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <h1>Update Your Profile</h1>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Name\" v-model=\"name\">\n                    <span class=\"error-feedback\" v-if=\"v$.name.$error\">{{ v$.name.$errors[0].$message }}</span>\n                </div>\n            </div>\n            <br />\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <input type=\"email\" class=\"form-control\" placeholder=\"Enter Your Email\" v-model=\"email\">\n                    <span class=\"error-feedback\" v-if=\"v$.email.$error\">{{ v$.email.$errors[0].$message }}</span>\n                </div>\n            </div>\n            <br />\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <input type=\"password\" class=\"form-control\" placeholder=\"Enter Your Password\" v-model=\"password\">\n                    <span class=\"error-feedback\" v-if=\"v$.password.$error\">{{ v$.password.$errors[0].$message }}</span>\n                </div>\n            </div>\n            <br />\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <button type=\"submit\" @click=\"updateProfileNow()\" class=\"btn btn-primary\">Update Profile Now</button>\n                </div>\n            </div>\n            <br />\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto error-feedback\">\n                    {{ updateError }}\n                </div>\n            </div>\n        </form>\n\n    </div>\n</template>\n\n<script>\nimport Navbar from '@/components/Header/Navbar.vue';\nimport axios from \"axios\";\n// For redirect to links\nimport { mapActions } from \"vuex\";\n// For validate data\nimport useValidate from \"@vuelidate/core\";\nimport { required, email, minLength } from \"@vuelidate/validators\";\n\nexport default {\n    name: \"UpdateProfileForm\",\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            v$: useValidate(),\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            userId: \"\",\n            updateError: \"\",\n        }\n    },\n    validations() {\n        return {\n            name: { required, minLength: minLength(10) },\n            email: { required, email },\n            password: { required, minLength: minLength(10) },\n        }\n    },\n    mounted() {\n        let user = localStorage.getItem(\"user-info\");\n        if (user) {\n            this.name = JSON.parse(user).name;\n            this.email = JSON.parse(user).email;\n            this.password = JSON.parse(user).password;\n            this.userId = JSON.parse(user).id;\n        } else {\n            this.redirectTo({ val: 'sign-up' });\n        }\n    },\n    methods: {\n        ...mapActions(['redirectTo']),\n        async updateProfileNow() {\n            this.v$.$validate();\n            if (!this.v$.$error) { \n                console.log(\"Form Validated Successfully\");\n                // Update Date\n                let result = await axios.put(`http://localhost:3000/users/${this.userId}`, {\n                    name: this.name,\n                    email: this.email,\n                    password: this.password,\n                });\n                if (result.status == 200) {\n                    console.log(\"Profile is Updated Successfully\");\n                    // save user data in local storage\n                    localStorage.setItem(\"user-info\", JSON.stringify(result.data));\n                    // redirect to home page\n                    this.redirectTo({ val: 'profile' });\n                    // this.$router.push({ name: \"profile\", params:{pageTitle: \"Profile Page\"}})\n                } else {\n                    this.updateError = \"Something Went Wrong, Try Again\";\n                }\n            } else {\n                this.updateError = \"Something Went Wrong, Refresh The Page\";\n            }\n        },\n    },\n}\n</script>\n\n<style scoped lang=\"scss\">\n.error-feedback {\n    color: red;\n    font-size: 0.85em;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}