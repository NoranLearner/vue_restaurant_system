{"ast":null,"code":"import axios from \"axios\";\nimport { mapActions } from 'vuex';\nimport useValidate from \"@vuelidate/core\";\nimport { required, email, minLength } from \"@vuelidate/validators\";\nexport default {\n  name: \"SignUpForm\",\n  data() {\n    return {\n      v$: useValidate(),\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    };\n  },\n  validations() {\n    return {\n      name: {\n        required,\n        minLength: minLength(10)\n      },\n      email: {\n        required,\n        email\n      },\n      password: {\n        required,\n        minLength: minLength(10)\n      }\n    };\n  },\n  methods: {\n    /* loginPage(){\n        // Use name in router file\n        this.$router.push({name:'login'});\n    }, */\n    ...mapActions(['redirectTo']),\n    async signUpNow() {\n      this.v$.$validate();\n      if (!this.v$.$error) {\n        let result = await axios.post('http://localhost:3000/users', {\n          name: this.name,\n          email: this.email,\n          password: this.password\n        });\n        if (result.status == 201) {\n          console.log(\"Added New User Successfully\");\n          // save user data in local storage\n          localStorage.setItem(\"user-info\", JSON.stringify(result.data));\n          console.log(result.data);\n          // redirect to home page\n          this.redirectTo({\n            val: 'home'\n          });\n        } else {\n          console.log(\"Error On Adding New User\");\n        }\n      } else {\n        console.log('Form Validation Failed');\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAoCA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,UAAS,QAAS,MAAM;AACjC,OAAOC,WAAU,MAAO,iBAAiB;AACzC,SAASC,QAAQ,EAAEC,KAAK,EAAEC,SAAQ,QAAS,uBAAuB;AAClE,eAAe;EACXC,IAAI,EAAE,YAAY;EAClBC,IAAI,GAAG;IACH,OAAO;MACHC,EAAE,EAAEN,WAAW,EAAE;MACjBI,IAAI,EAAE,EAAE;MACRF,KAAK,EAAE,EAAE;MACTK,QAAQ,EAAC;IACb;EACJ,CAAC;EACDC,WAAW,GAAG;IACV,OAAO;MACHJ,IAAI,EAAE;QAACH,QAAQ;QAAEE,SAAS,EAAEA,SAAS,CAAC,EAAE;MAAC,CAAC;MAC1CD,KAAK,EAAE;QAACD,QAAQ;QAAEC;MAAK,CAAC;MACxBK,QAAQ,EAAE;QAAEN,QAAQ;QAAEE,SAAS,EAAEA,SAAS,CAAC,EAAE;MAAE;IACnD;EACJ,CAAC;EACDM,OAAO,EAAE;IACL;;;;IAIA,GAAGV,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7B,MAAMW,SAAS,GAAG;MACd,IAAI,CAACJ,EAAE,CAACK,SAAS,EAAE;MACnB,IAAI,CAAC,IAAI,CAACL,EAAE,CAACM,MAAM,EAAE;QAEjB,IAAIC,MAAK,GAAI,MAAMf,KAAK,CAACgB,IAAI,CAAC,6BAA6B,EAAE;UACzDV,IAAI,EAAE,IAAI,CAACA,IAAI;UACfF,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBK,QAAQ,EAAE,IAAI,CAACA;QACnB,CAAC,CAAC;QAEF,IAAIM,MAAM,CAACE,MAAK,IAAK,GAAG,EAAE;UACtBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;UAC1C;UACAC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACR,MAAM,CAACR,IAAI,CAAC,CAAC;UAC9DW,OAAO,CAACC,GAAG,CAACJ,MAAM,CAACR,IAAI,CAAC;UACxB;UACA,IAAI,CAACiB,UAAU,CAAC;YAAEC,GAAG,EAAE;UAAO,CAAC,CAAC;QACpC,OAAO;UACHP,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QAC3C;MAEJ,OAAO;QACHD,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACzC;IACJ;EACJ;AACJ","names":["axios","mapActions","useValidate","required","email","minLength","name","data","v$","password","validations","methods","signUpNow","$validate","$error","result","post","status","console","log","localStorage","setItem","JSON","stringify","redirectTo","val"],"sourceRoot":"","sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/SignUp/SignUpForm.vue"],"sourcesContent":["<template>\n    <form @click.prevent>\n        <h1>Sign Up</h1>\n        <div class=\"row g-3 align-items-center\">\n            <div class=\"col-auto d-block mx-auto\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Name\" v-model=\"name\">\n                <span class=\"error-feedback\" v-if=\"v$.name.$error\">{{ v$.name.$errors[0].$message }}</span>\n            </div>\n        </div>\n        <br />\n        <div class=\"row g-3 align-items-center\">\n            <div class=\"col-auto d-block mx-auto\">\n                <input type=\"email\" class=\"form-control\" placeholder=\"Enter Your Email\" v-model=\"email\">\n                <span class=\"error-feedback\" v-if=\"v$.email.$error\">{{ v$.email.$errors[0].$message }}</span>\n            </div>\n        </div>\n        <br />\n        <div class=\"row g-3 align-items-center\">\n            <div class=\"col-auto d-block mx-auto\">\n                <input type=\"password\" class=\"form-control\" placeholder=\"Enter Your Password\" v-model=\"password\">\n                <span class=\"error-feedback\" v-if=\"v$.password.$error\">{{ v$.password.$errors[0].$message }}</span>\n            </div>\n        </div>\n        <br />\n        <div class=\"row g-3 align-items-center\">\n            <div class=\"col-auto d-block mx-auto\">\n                <button type=\"submit\" class=\"btn btn-secondary\" @click=\"signUpNow()\">Sign Up Now</button>\n                &nbsp;\n                <!-- <button type=\"button\" class=\"btn btn-link\" @click=\"loginPage()\">Login</button> -->\n                <button type=\"button\" class=\"btn btn-link\" @click=\"redirectTo({val: 'login'})\">Login</button>\n            </div>\n        </div>\n    </form>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { mapActions } from 'vuex';\nimport useValidate from \"@vuelidate/core\";\nimport { required, email, minLength } from \"@vuelidate/validators\";\nexport default {\n    name: \"SignUpForm\",\n    data() {\n        return {\n            v$: useValidate(),\n            name: \"\",\n            email: \"\",\n            password:\"\",\n        }\n    },\n    validations() {\n        return {\n            name: {required, minLength: minLength(10)},\n            email: {required, email},\n            password: { required, minLength: minLength(10) },\n        }\n    },\n    methods: {\n        /* loginPage(){\n            // Use name in router file\n            this.$router.push({name:'login'});\n        }, */\n        ...mapActions(['redirectTo']),\n        async signUpNow() {\n            this.v$.$validate();\n            if (!this.v$.$error) {\n\n                let result = await axios.post('http://localhost:3000/users', {\n                    name: this.name,\n                    email: this.email,\n                    password: this.password,\n                });\n\n                if (result.status == 201) { \n                    console.log(\"Added New User Successfully\");\n                    // save user data in local storage\n                    localStorage.setItem(\"user-info\", JSON.stringify(result.data));\n                    console.log(result.data);\n                    // redirect to home page\n                    this.redirectTo({ val: 'home' });\n                } else {\n                    console.log(\"Error On Adding New User\");\n                }\n\n            } else {\n                console.log('Form Validation Failed');\n            }\n        },\n    },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.error-feedback{\n    color: red;\n    font-size: 0.85em;\n    }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}