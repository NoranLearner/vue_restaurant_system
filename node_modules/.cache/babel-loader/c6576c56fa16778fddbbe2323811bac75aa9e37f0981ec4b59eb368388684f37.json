{"ast":null,"code":"import axios from \"axios\";\n// For redirect to links\nimport { mapActions } from \"vuex\";\n// For validate data\nimport useValidate from \"@vuelidate/core\";\nimport { required, email } from \"@vuelidate/validators\";\n// For Composition Api\nimport { reactive, computed } from \"vue\";\nexport default {\n  name: \"LoginForm\",\n  setup() {\n    // Data\n    const state = reactive({\n      email: \"\",\n      password: \"\"\n    });\n    // Validations\n    const rules = computed(() => {\n      return {\n        email: {\n          required,\n          email\n        },\n        password: {\n          required\n        }\n      };\n    });\n    // Write rules first\n    const v$ = useValidate(rules, state);\n    return {\n      state,\n      v$\n    };\n  },\n  data() {\n    return {\n      successMessage: \"\",\n      errorMessage: \"\"\n    };\n  },\n  mounted() {\n    let user = localStorage.getItem(\"user-info\");\n    if (user) {\n      this.redirectTo({\n        val: \"home\"\n      });\n    }\n  },\n  methods: {\n    ...mapActions([\"redirectTo\"]),\n    async loginUser() {\n      this.v$.$validate();\n      if (!this.v$.$error) {\n        console.log(\"Form Validated Successfully\");\n        let result = await axios.get(`http://localhost:3000/users?email=${this.state.email}&password=${this.state.password}`);\n        if (result.status == 200 && result.data.length > 0) {\n          // save user data in local storage\n          localStorage.setItem(\"user-info\", JSON.stringify(result.data[0]));\n          this.errorMessage = '';\n          this.successMessage = 'Loading....';\n          setTimeout(() => {\n            // redirect to home page\n            this.redirectTo({\n              val: 'home'\n            });\n          }, 2000);\n        } else {\n          this.successMessage = '';\n          this.errorMessage = 'User is invalid!';\n        }\n      } else {\n        this.successMessage = '';\n        this.errorMessage = 'You Must Enter Your Email and Password';\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AA8CA,OAAOA,KAAI,MAAO,OAAO;AACzB;AACA,SAASC,UAAS,QAAS,MAAM;AACjC;AACA,OAAOC,WAAU,MAAO,iBAAiB;AACzC,SAASC,QAAQ,EAAEC,KAAI,QAAS,uBAAuB;AACvD;AACA,SAASC,QAAQ,EAAEC,QAAO,QAAS,KAAK;AAExC,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,KAAK,GAAG;IACJ;IACA,MAAMC,KAAI,GAAIJ,QAAQ,CAAC;MACnBD,KAAK,EAAE,EAAE;MACTM,QAAQ,EAAE;IACd,CAAC,CAAC;IACF;IACA,MAAMC,KAAI,GAAIL,QAAQ,CAAC,MAAM;MACzB,OAAO;QACHF,KAAK,EAAE;UAAED,QAAQ;UAAEC;QAAM,CAAC;QAC1BM,QAAQ,EAAE;UAAEP;QAAS;MACzB,CAAC;IACL,CAAC,CAAC;IACF;IACA,MAAMS,EAAC,GAAIV,WAAW,CAACS,KAAK,EAAEF,KAAK,CAAC;IACpC,OAAO;MAAEA,KAAK;MAAEG;IAAG,CAAC;EACxB,CAAC;EACDC,IAAI,GAAG;IACH,OAAO;MACHC,cAAc,EAAE,EAAE;MAClBC,YAAY,EAAE;IAClB,CAAC;EACL,CAAC;EACDC,OAAO,GAAG;IACN,IAAIC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC5C,IAAIF,IAAI,EAAE;MACN,IAAI,CAACG,UAAU,CAAC;QAAEC,GAAG,EAAE;MAAO,CAAC,CAAC;IACpC;EACJ,CAAC;EACDC,OAAO,EAAE;IAEL,GAAGrB,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAE7B,MAAMsB,SAAS,GAAG;MACd,IAAI,CAACX,EAAE,CAACY,SAAS,EAAE;MACnB,IAAI,CAAC,IAAI,CAACZ,EAAE,CAACa,MAAM,EAAE;QACjBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1C,IAAIC,MAAK,GAAI,MAAM5B,KAAK,CAAC6B,GAAG,CACvB,qCAAoC,IAAI,CAACpB,KAAK,CAACL,KAAM,aAAY,IAAI,CAACK,KAAK,CAACC,QAAS,GACzF;QACD,IAAIkB,MAAM,CAACE,MAAK,IAAK,GAAE,IAAKF,MAAM,CAACf,IAAI,CAACkB,MAAK,GAAI,CAAC,EAAE;UAEhD;UACAb,YAAY,CAACc,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACN,MAAM,CAACf,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;UAEjE,IAAI,CAACE,YAAW,GAAI,EAAE;UACtB,IAAI,CAACD,cAAa,GAAI,aAAa;UAEnCqB,UAAU,CAAC,MAAM;YACb;YACA,IAAI,CAACf,UAAU,CAAC;cAAEC,GAAG,EAAE;YAAO,CAAC,CAAC;UACpC,CAAC,EAAE,IAAI,CAAC;QAEZ,OAAO;UACH,IAAI,CAACP,cAAa,GAAI,EAAE;UACxB,IAAI,CAACC,YAAW,GAAI,kBAAkB;QAC1C;MACJ,OAAO;QACH,IAAI,CAACD,cAAa,GAAI,EAAE;QACxB,IAAI,CAACC,YAAW,GAAI,wCAAwC;MAChE;IACJ;EACJ;AACJ,CAAC","names":["axios","mapActions","useValidate","required","email","reactive","computed","name","setup","state","password","rules","v$","data","successMessage","errorMessage","mounted","user","localStorage","getItem","redirectTo","val","methods","loginUser","$validate","$error","console","log","result","get","status","length","setItem","JSON","stringify","setTimeout"],"sourceRoot":"","sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/Login/LoginForm.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <h1 class=\"text-center\">Login</h1>\n        <form @click.prevent>\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <!-- https://getbootstrap.com/docs/5.0/forms/floating-labels/ -->\n                    <div class=\"form-floating mb-3\" :class=\"{ 'form-group--error': v$.email.$error }\">\n                        <input type=\"email\" class=\"form-control w300\" id=\"floatingEmail\" placeholder=\"Enter Your Email\" v-model.trim=\"state.email\">\n                        <label for=\"floatingEmail\">Enter Your Email</label>\n                        <span class=\"error-feedback\" v-if=\"v$.email.$error\">{{ v$.email.$errors[0].$message }}</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <div class=\"form-floating\" :class=\"{ 'form-group--error': v$.password.$error }\">\n                        <input type=\"password\" class=\"form-control w300\" id=\"floatingPassword\" placeholder=\"Enter Your Password\" v-model.trim=\"state.password\">\n                        <label for=\"floatingPassword\">Enter Your Password</label>\n                        <span class=\"error-feedback\" v-if=\"v$.password.$error\">{{ v$.password.$errors[0].$message }}</span>\n                    </div>\n                </div>\n            </div>\n            <br />\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <button type=\"submit\" @click=\"loginUser()\" class=\"btn btn-primary w300\"> Login Now </button>\n                    <div class=\"d-flex justify-content-center\">\n                        <button type=\"button\" @click=\"redirectTo({ val: 'sign-up' })\" class=\"btn btn-link\"> Sign Up </button>\n                    </div>\n                </div>\n            </div>\n            <br />\n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto alert alert-success\" v-if=\"successMessage.length>0\">\n                    {{ successMessage }}\n                </div>\n                <div class=\"col-auto d-block mx-auto alert alert-danger\" v-if=\"errorMessage.length>0\">\n                    {{ errorMessage }}\n                </div>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n// For redirect to links\nimport { mapActions } from \"vuex\";\n// For validate data\nimport useValidate from \"@vuelidate/core\";\nimport { required, email } from \"@vuelidate/validators\";\n// For Composition Api\nimport { reactive, computed } from \"vue\";\n\nexport default {\n    name: \"LoginForm\",\n    setup() {\n        // Data\n        const state = reactive({\n            email: \"\",\n            password: \"\",\n        });\n        // Validations\n        const rules = computed(() => {\n            return {\n                email: { required, email },\n                password: { required },\n            };\n        });\n        // Write rules first\n        const v$ = useValidate(rules, state);\n        return { state, v$ };\n    },\n    data() {\n        return {\n            successMessage: \"\",\n            errorMessage: \"\",\n        };\n    },\n    mounted() {\n        let user = localStorage.getItem(\"user-info\");\n        if (user) {\n            this.redirectTo({ val: \"home\" });\n        }\n    },\n    methods: {\n\n        ...mapActions([\"redirectTo\"]),\n        \n        async loginUser() {\n            this.v$.$validate();\n            if (!this.v$.$error) {\n                console.log(\"Form Validated Successfully\");\n                let result = await axios.get(\n                    `http://localhost:3000/users?email=${this.state.email}&password=${this.state.password}`\n                );\n                if (result.status == 200 && result.data.length > 0) {\n                    \n                    // save user data in local storage\n                    localStorage.setItem(\"user-info\", JSON.stringify(result.data[0]));\n                    \n                    this.errorMessage = '';\n                    this.successMessage = 'Loading....';\n\n                    setTimeout(() => {\n                        // redirect to home page\n                        this.redirectTo({ val: 'home' });\n                    }, 2000);\n\n                } else {\n                    this.successMessage = '';\n                    this.errorMessage = 'User is invalid!';\n                }\n            } else {\n                this.successMessage = '';\n                this.errorMessage = 'You Must Enter Your Email and Password';\n            }\n        },\n    },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.w300 {\n    min-width: 300px;\n}\n.error-feedback,\n.form-group--error {\n    color: red;\n    font-size: 0.85em;\n}\n\n.form-group--error input,\n.form-group--error textarea,\n.form-group--error select {\n    border-color: red;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}