{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\n// For redirect to links\nimport { mapActions } from \"vuex\";\nimport Navbar from '@/components/Header/Navbar.vue';\nexport default {\n  name: 'DeleteAllLocation',\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      userId: '',\n      allLocationId: [],\n      allCatsIdIs: [],\n      allItemsIdIs: [],\n      successMessage: '',\n      errorMessage: ''\n    };\n  },\n  async mounted() {\n    let user = localStorage.getItem('user-info');\n    if (!user) {\n      this.redirectTo({\n        val: 'sign-up'\n      });\n    } else {\n      this.userId = JSON.parse(user).id;\n\n      // All Locations\n      // http://localhost:3000/locations?userId=2\n      let result = await axios.get(`http://localhost:3000/locations?userId=${this.userId}`);\n      let resultLength = result.data.length;\n      for (var i = 0; i < resultLength; i++) {\n        this.allLocationId.push(result.data[i].id);\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['redirectTo']),\n    goBack() {\n      // redirect to home page\n      this.redirectTo({\n        val: 'home'\n      });\n    },\n    async deleteAll() {\n      // For Location\n      // Code of location must in final\n      let allResults = [];\n      for (var i = 0; i < this.allLocationId.length; i++) {\n        let result = await axios.delete(`http://localhost:3000/locations/${this.allLocationId[i]}`);\n        if (result.status == 200) {\n          allResults.push(true);\n        } else {\n          allResults.push(false);\n        }\n      }\n      if (!allItemsResults.includes(false) && !allCatsResults.includes(false) && !allResults.includes(false)) {\n        // All deleted successfully\n        this.successMessage = 'Delete All Locations Successfully';\n        this.errorMessage = '';\n        setTimeout(() => {\n          this.redirectTo({\n            val: 'home'\n          });\n        }, 2000);\n      } else {\n        this.successMessage = '';\n        this.errorMessage = 'Something went wrong, Try again';\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AA+CA,OAAOA,KAAI,MAAO,OAAO;AACzB;AACA,SAASC,UAAS,QAAS,MAAM;AACjC,OAAOC,MAAK,MAAO,gCAAgC;AAEnD,eAAe;EACXC,IAAI,EAAE,mBAAmB;EACzBC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,IAAI,GAAG;IACH,OAAO;MACHC,MAAM,EAAE,EAAE;MACVC,aAAa,EAAE,EAAE;MACjBC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE,EAAE;MAClBC,YAAY,EAAE;IAClB;EACJ,CAAC;EACD,MAAMC,OAAO,GAAG;IACZ,IAAIC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC5C,IAAI,CAACF,IAAI,EAAE;MACP,IAAI,CAACG,UAAU,CAAC;QAAEC,GAAG,EAAE;MAAU,CAAC,CAAC;IACvC,OAAO;MACH,IAAI,CAACX,MAAK,GAAIY,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC,CAACO,EAAE;;MAEjC;MACA;MACA,IAAIC,MAAK,GAAI,MAAMrB,KAAK,CAACsB,GAAG,CAAE,0CAAyC,IAAI,CAAChB,MAAO,EAAC,CAAC;MACrF,IAAIiB,YAAW,GAAIF,MAAM,CAAChB,IAAI,CAACmB,MAAM;MACrC,KAAK,IAAIC,IAAI,CAAC,EAAEA,IAAIF,YAAY,EAAEE,CAAC,EAAE,EAAE;QACnC,IAAI,CAAClB,aAAa,CAACmB,IAAI,CAACL,MAAM,CAAChB,IAAI,CAACoB,CAAC,CAAC,CAACL,EAAE,CAAC;MAC9C;IACJ;EACJ,CAAC;EACDO,OAAO,EAAE;IACL,GAAG1B,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7B2B,MAAM,GAAG;MACL;MACA,IAAI,CAACZ,UAAU,CAAC;QAAEC,GAAG,EAAE;MAAO,CAAC,CAAC;IACpC,CAAC;IACD,MAAMY,SAAS,GAAG;MAEd;MACA;MACA,IAAIC,UAAS,GAAI,EAAE;MACnB,KAAK,IAAIL,IAAI,CAAC,EAAEA,IAAI,IAAI,CAAClB,aAAa,CAACiB,MAAM,EAAEC,CAAC,EAAE,EAAE;QAChD,IAAIJ,MAAK,GAAI,MAAMrB,KAAK,CAAC+B,MAAM,CAAE,mCAAkC,IAAI,CAACxB,aAAa,CAACkB,CAAC,CAAE,EAAC,CAAC;QAE3F,IAAIJ,MAAM,CAACW,MAAK,IAAK,GAAG,EAAE;UACtBF,UAAU,CAACJ,IAAI,CAAC,IAAI,CAAC;QACzB,OAAO;UACHI,UAAU,CAACJ,IAAI,CAAC,KAAK,CAAC;QAC1B;MACJ;MAEA,IAAI,CAACO,eAAe,CAACC,QAAQ,CAAC,KAAK,KAAK,CAACC,cAAc,CAACD,QAAQ,CAAC,KAAK,KAAK,CAACJ,UAAU,CAACI,QAAQ,CAAC,KAAK,CAAC,EAAE;QACpG;QACA,IAAI,CAACxB,cAAa,GAAI,mCAAmC;QACzD,IAAI,CAACC,YAAW,GAAI,EAAE;QACtByB,UAAU,CAAC,MAAM;UACb,IAAI,CAACpB,UAAU,CAAC;YAAEC,GAAG,EAAE;UAAO,CAAC,CAAC;QACpC,CAAC,EAAE,IAAI,CAAC;MACZ,OAAO;QACH,IAAI,CAACP,cAAa,GAAI,EAAE;QACxB,IAAI,CAACC,YAAW,GAAI,iCAAiC;MACzD;IACJ;EACJ;AACJ","names":["axios","mapActions","Navbar","name","components","data","userId","allLocationId","allCatsIdIs","allItemsIdIs","successMessage","errorMessage","mounted","user","localStorage","getItem","redirectTo","val","JSON","parse","id","result","get","resultLength","length","i","push","methods","goBack","deleteAll","allResults","delete","status","allItemsResults","includes","allCatsResults","setTimeout"],"sourceRoot":"","sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/Locations/DeleteAllLocation.vue"],"sourcesContent":["<template>\n\n    <div class=\"container\">\n\n        <Navbar/>\n\n        <form @click.prevent>\n        \n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <h1>Delete All Locations</h1>\n                    <hr>\n                    <p class=\"text-danger\">\n                        Are you sure you want to delete all locations ?\n                    </p>\n                    <span class=\"text-muted\">It will also delete all related items and categories...., Be careful</span>\n                    <hr>\n                </div>\n            </div>\n        \n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto\">\n                    <button class=\"btn btn-info text-white\" @click=\"goBack()\">Go Back</button>\n                    &nbsp;&nbsp;&nbsp;\n                    <button class=\"btn btn-danger text-white\" @click=\"deleteAll()\">Delete All Now</button>\n                </div>\n            </div>\n        \n            <br />\n            \n            <div class=\"row g-3 align-items-center\">\n                <div class=\"col-auto d-block mx-auto alert alert-success\" v-if=\"successMessage.length>0\">\n                    {{ successMessage }}\n                </div>\n                <div class=\"col-auto d-block mx-auto alert alert-warning\" v-if=\"errorMessage.length>0\">\n                    {{ errorMessage }}\n                </div>\n            </div>\n        \n        </form>\n\n    </div>\n\n</template>\n\n<script>\n\nimport axios from \"axios\";\n// For redirect to links\nimport { mapActions } from \"vuex\";\nimport Navbar from '@/components/Header/Navbar.vue';\n\nexport default {\n    name: 'DeleteAllLocation',\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            userId: '',\n            allLocationId: [],\n            allCatsIdIs: [],\n            allItemsIdIs: [],\n            successMessage: '',\n            errorMessage: '',\n        }\n    },\n    async mounted() {\n        let user = localStorage.getItem('user-info');\n        if (!user) {\n            this.redirectTo({ val: 'sign-up' });\n        } else {\n            this.userId = JSON.parse(user).id;\n\n            // All Locations\n            // http://localhost:3000/locations?userId=2\n            let result = await axios.get(`http://localhost:3000/locations?userId=${this.userId}`);\n            let resultLength = result.data.length;\n            for (var i = 0; i < resultLength; i++) {\n                this.allLocationId.push(result.data[i].id);\n            }\n        }\n    },\n    methods: {\n        ...mapActions(['redirectTo']),\n        goBack() {\n            // redirect to home page\n            this.redirectTo({ val: 'home' });\n        },\n        async deleteAll() {\n\n            // For Location\n            // Code of location must in final\n            let allResults = [];\n            for (var i = 0; i < this.allLocationId.length; i++) {\n                let result = await axios.delete(`http://localhost:3000/locations/${this.allLocationId[i]}`);\n\n                if (result.status == 200) {\n                    allResults.push(true);\n                } else {\n                    allResults.push(false);\n                }\n            }\n\n            if (!allItemsResults.includes(false) && !allCatsResults.includes(false) && !allResults.includes(false)) {\n                // All deleted successfully\n                this.successMessage = 'Delete All Locations Successfully';\n                this.errorMessage = '';\n                setTimeout(() => {\n                    this.redirectTo({ val: 'home' });\n                }, 2000);\n            } else {\n                this.successMessage = '';\n                this.errorMessage = 'Something went wrong, Try again';\n            }\n        },\n    },\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}