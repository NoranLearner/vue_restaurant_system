{"ast":null,"code":"// To Use HTTP Request\nimport axios from \"axios\";\n// For redirect to links\nimport { mapActions, mapState, mapMutations } from \"vuex\";\nimport Navbar from '@/components/Header/Navbar.vue';\nexport default {\n  name: 'ViewCategories',\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      locId: this.$route.params.locationId,\n      userId: \"\",\n      locName: \"\",\n      locAddress: \"\"\n    };\n  },\n  computed: {\n    ...mapState([\"numOfCategories\", \"listOfCategories\"])\n  },\n  mounted() {\n    let user = localStorage.getItem('user-info');\n    if (!user) {\n      // Using name in router file\n      this.redirectTo({\n        val: 'sign-up'\n      });\n    } else {\n      this.userId = JSON.parse(user).id;\n      this.userName = JSON.parse(user).name;\n      this.displayAllCategories({\n        userIdIs: this.userId,\n        locationIdIs: this.locId\n      });\n      this.canUserAccessThisLocation({\n        userIdIs: this.userId,\n        locationIdIs: this.locId,\n        redirectToPage: \"home\"\n      });\n      this.getLocationInfo(this.userId, this.locId);\n    }\n  },\n  methods: {\n    ...mapMutations([\"isLoggedInUser\", \"displayAllCategories\", \"canUserAccessThisLocation\"]),\n    ...mapActions(['redirectTo']),\n    async getLocationInfo(userId, locId) {\n      let result = await axios.get(`http://localhost:3000/locations?userId=${userId}&id=${locId}`);\n      let locDetails = [];\n      if (result.status == 200) {\n        locDetails = result.data;\n        this.locName = locDetails[0].name;\n        this.locAddress = locDetails[0].address;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAWA;AACA,OAAOA,KAAI,MAAO,OAAO;AACzB;AACA,SAASC,UAAU,EAAEC,QAAQ,EAAEC,YAAW,QAAS,MAAM;AACzD,OAAOC,MAAK,MAAO,gCAAgC;AAEnD,eAAe;EACXC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,IAAI,GAAG;IACH,OAAO;MACHC,KAAK,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,UAAU;MACpCC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,EAAE;MACXC,UAAU,EAAE;IAChB;EACJ,CAAC;EACDC,QAAQ,EAAE;IACN,GAAGb,QAAQ,CAAC,CACR,iBAAiB,EACjB,kBAAiB,CACpB;EACL,CAAC;EACDc,OAAO,GAAG;IACN,IAAIC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC5C,IAAI,CAACF,IAAI,EAAE;MACP;MACA,IAAI,CAACG,UAAU,CAAC;QAAEC,GAAG,EAAE;MAAU,CAAC,CAAC;IACvC,OAAO;MACH,IAAI,CAACT,MAAK,GAAIU,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC,CAACO,EAAE;MACjC,IAAI,CAACC,QAAO,GAAIH,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC,CAACZ,IAAI;MACrC,IAAI,CAACqB,oBAAoB,CAAC;QACtBC,QAAQ,EAAE,IAAI,CAACf,MAAM;QACrBgB,YAAY,EAAE,IAAI,CAACpB;MACvB,CAAC,CAAC;MACF,IAAI,CAACqB,yBAAyB,CAAC;QAC3BF,QAAQ,EAAE,IAAI,CAACf,MAAM;QACrBgB,YAAY,EAAE,IAAI,CAACpB,KAAK;QACxBsB,cAAc,EAAE;MACpB,CAAC,CAAC;MACF,IAAI,CAACC,eAAe,CAAC,IAAI,CAACnB,MAAM,EAAE,IAAI,CAACJ,KAAK,CAAC;IACjD;EACJ,CAAC;EACDwB,OAAO,EAAE;IACL,GAAG7B,YAAY,CAAC,CACZ,gBAAgB,EAChB,sBAAsB,EACtB,2BAA0B,CAC7B,CAAC;IACF,GAAGF,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7B,MAAM8B,eAAe,CAACnB,MAAM,EAAEJ,KAAK,EAAE;MACjC,IAAIyB,MAAK,GAAI,MAAMjC,KAAK,CAACkC,GAAG,CAAE,0CAAyCtB,MAAO,OAAMJ,KAAM,EAAC,CAAC;MAC5F,IAAI2B,UAAS,GAAI,EAAE;MACnB,IAAIF,MAAM,CAACG,MAAK,IAAK,GAAG,EAAE;QACtBD,UAAS,GAAIF,MAAM,CAAC1B,IAAI;QACxB,IAAI,CAACM,OAAM,GAAIsB,UAAU,CAAC,CAAC,CAAC,CAAC9B,IAAI;QACjC,IAAI,CAACS,UAAS,GAAIqB,UAAU,CAAC,CAAC,CAAC,CAACE,OAAO;MAC3C;IACJ;EACJ;AACJ","names":["axios","mapActions","mapState","mapMutations","Navbar","name","components","data","locId","$route","params","locationId","userId","locName","locAddress","computed","mounted","user","localStorage","getItem","redirectTo","val","JSON","parse","id","userName","displayAllCategories","userIdIs","locationIdIs","canUserAccessThisLocation","redirectToPage","getLocationInfo","methods","result","get","locDetails","status","address"],"sourceRoot":"","sources":["/opt/lampp/htdocs/rest-sys-2021/src/components/Menu/ViewCategories.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <Navbar></Navbar>\n        <router-link :to=\"{name: 'add-new-category', params:{locId:locationId}}\">\n            <button type=\"button\" class=\"btn btn-secondary\">Add Category</button>\n        </router-link>\n    </div>\n</template>\n\n<script>\n\n// To Use HTTP Request\nimport axios from \"axios\";\n// For redirect to links\nimport { mapActions, mapState, mapMutations } from \"vuex\";\nimport Navbar from '@/components/Header/Navbar.vue';\n\nexport default {\n    name: 'ViewCategories',\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            locId: this.$route.params.locationId,\n            userId: \"\",\n            locName: \"\",\n            locAddress: \"\",\n        }\n    },\n    computed: {\n        ...mapState([\n            \"numOfCategories\",\n            \"listOfCategories\"\n        ]),\n    },\n    mounted() {\n        let user = localStorage.getItem('user-info');\n        if (!user) {\n            // Using name in router file\n            this.redirectTo({ val: 'sign-up' });\n        } else {\n            this.userId = JSON.parse(user).id;\n            this.userName = JSON.parse(user).name;\n            this.displayAllCategories({\n                userIdIs: this.userId,\n                locationIdIs: this.locId\n            });\n            this.canUserAccessThisLocation({\n                userIdIs: this.userId,\n                locationIdIs: this.locId,\n                redirectToPage: \"home\",\n            });\n            this.getLocationInfo(this.userId, this.locId);\n        }\n    },\n    methods: {\n        ...mapMutations([\n            \"isLoggedInUser\",\n            \"displayAllCategories\",\n            \"canUserAccessThisLocation\"\n        ]),\n        ...mapActions(['redirectTo']),\n        async getLocationInfo(userId, locId) {\n            let result = await axios.get(`http://localhost:3000/locations?userId=${userId}&id=${locId}`);\n            let locDetails = [];\n            if (result.status == 200) {\n                locDetails = result.data;\n                this.locName = locDetails[0].name;\n                this.locAddress = locDetails[0].address;\n            }\n        },\n    },\n}\n</script>\n\n<style scoped>\n.mb {\n    margin-bottom: 0;\n}\n.mt15 {\n    margin-top: 15px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}